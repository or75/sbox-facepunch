using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using Native;
using Tools;

namespace Managed.SourceTools
{
	// Token: 0x02000069 RID: 105
	internal static class NativeInterop
	{
		// Token: 0x06001258 RID: 4696 RVA: 0x00034B60 File Offset: 0x00032D60
		private unsafe static void CheckStructSizes(int* struct_sizes)
		{
			string errors = "";
			int i = 0;
			if (234 != struct_sizes[i++])
			{
				errors += "Struct size header not found\n";
			}
			if (sizeof(BBox) != struct_sizes[i++])
			{
				string str = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(12, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(BBox));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tBBox \n");
				errors = str + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(Color32) != struct_sizes[i++])
			{
				string str2 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(15, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(Color32));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tColor32 \n");
				errors = str2 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(Color24) != struct_sizes[i++])
			{
				string str3 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(15, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(Color24));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tColor24 \n");
				errors = str3 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(Transform) != struct_sizes[i++])
			{
				string str4 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(17, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(Transform));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTransform \n");
				errors = str4 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(Angles) != struct_sizes[i++])
			{
				string str5 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(14, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(Angles));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tAngles \n");
				errors = str5 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str6 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(33, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.BoxLayout.Direction \n");
				errors = str6 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str7 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(33, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.ComboBox.InsertMode \n");
				errors = str7 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str8 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(32, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.DockWidgetFeatures \n");
				errors = str8 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str9 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(24, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNative.EventType \n");
				errors = str9 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str10 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(35, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.FileDialog.AcceptMode \n");
				errors = str10 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str11 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(36, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.FileDialog.DialogLabel \n");
				errors = str11 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str12 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(33, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.FileDialog.FileMode \n");
				errors = str12 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str13 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(31, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.FileDialog.Option \n");
				errors = str13 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str14 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(33, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.FileDialog.ViewMode \n");
				errors = str14 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str15 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(31, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNative.GraphicsItemFlag \n");
				errors = str15 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str16 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(45, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.GraphicsView.ViewportAnchorType \n");
				errors = str16 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str17 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(19, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNative.Flow \n");
				errors = str17 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str18 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(25, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNative.LayoutMode \n");
				errors = str18 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str19 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(23, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNative.Movement \n");
				errors = str19 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str20 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(25, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNative.ResizeMode \n");
				errors = str20 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str21 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(23, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNative.ViewMode \n");
				errors = str21 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(ModelIndex) != struct_sizes[i++])
			{
				string str22 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(24, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(ModelIndex));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.ModelIndex \n");
				errors = str22 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str23 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(25, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.RenderHints \n");
				errors = str23 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str24 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(20, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tLineWrapMode \n");
				errors = str24 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str25 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(22, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.SizeMode \n");
				errors = str25 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str26 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(24, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.CheckState \n");
				errors = str26 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str27 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(25, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.CursorShape \n");
				errors = str27 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str28 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(22, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.DockArea \n");
				errors = str28 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str29 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(24, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.DropAction \n");
				errors = str29 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str30 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(23, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.FocusMode \n");
				errors = str30 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str31 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(31, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.FocusChangeReason \n");
				errors = str31 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str32 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(28, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.DataNode.Flags \n");
				errors = str32 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str33 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(31, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.KeyboardModifiers \n");
				errors = str33 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str34 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(26, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.MouseButtons \n");
				errors = str34 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str35 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(27, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.ScrollbarMode \n");
				errors = str35 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str36 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(28, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTextInteractionFlags \n");
				errors = str36 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str37 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(29, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.ToolbarPosition \n");
				errors = str37 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str38 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(25, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.Widget.Flag \n");
				errors = str38 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str39 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(25, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTools.WindowFlags \n");
				errors = str39 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str40 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(32, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tQTextCursorSelectionType \n");
				errors = str40 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str41 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(27, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tQTextOptionWrapMode \n");
				errors = str41 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(Rotation) != struct_sizes[i++])
			{
				string str42 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(16, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(Rotation));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tRotation \n");
				errors = str42 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(NativeRect) != struct_sizes[i++])
			{
				string str43 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(18, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(NativeRect));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeRect \n");
				errors = str43 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(Rect3D) != struct_sizes[i++])
			{
				string str44 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(14, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(Rect3D));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tRect3D \n");
				errors = str44 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(Capsule) != struct_sizes[i++])
			{
				string str45 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(15, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(Capsule));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tCapsule \n");
				errors = str45 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(Vector3) != struct_sizes[i++])
			{
				string str46 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(15, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(Vector3));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tVector3 \n");
				errors = str46 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(Vector2) != struct_sizes[i++])
			{
				string str47 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(15, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(Vector2));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tVector2 \n");
				errors = str47 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(Vector4) != struct_sizes[i++])
			{
				string str48 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(15, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(Vector4));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tVector4 \n");
				errors = str48 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(Matrix) != struct_sizes[i++])
			{
				string str49 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(14, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(Matrix));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tMatrix \n");
				errors = str49 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (49 != struct_sizes[i++])
			{
				errors += "Struct size footer not found\n";
			}
			if (!string.IsNullOrEmpty(errors))
			{
				throw new Exception("Data structure size doesn't match:\n\n" + errors.Trim());
			}
		}

		// Token: 0x06001259 RID: 4697 RVA: 0x00035F1C File Offset: 0x0003411C
		internal unsafe static void Initialize(int hash, IntPtr* exported, int* struct_sizes, IntPtr* imported)
		{
			int i = 0;
			int num = i;
			i = num + 1;
			NativeInterop._ErrorFunction onError = Marshal.GetDelegateForFunctionPointer<NativeInterop._ErrorFunction>(exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
			try
			{
				if (hash != 48094)
				{
					DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(32, 1);
					defaultInterpolatedStringHandler.AppendLiteral("Hash doesn't match ( ");
					defaultInterpolatedStringHandler.AppendFormatted<int>(hash);
					defaultInterpolatedStringHandler.AppendLiteral(" != 48094 )");
					throw new Exception(defaultInterpolatedStringHandler.ToStringAndClear());
				}
				NativeInterop.CheckStructSizes(struct_sizes);
				num = i;
				i = num + 1;
				CAction.__N.From_QAction_To_CAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.To_QAction_From_CAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.From_QObject_To_CAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.To_QObject_From_CAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_setText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_text = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_setIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_setSeparator = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_isSeparator = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_setCheckable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_isCheckable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_isChecked = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_setChecked = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_setIconVisibleInMenu = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_isIconVisibleInMenu = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_setShortcutVisibleInContextMenu = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_isShortcutVisibleInContextMenu = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_trigger = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_setMenu = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_setShortcut = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_deleteLater = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_objectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_setObjectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_setProperty = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CAction.__N.CActio_f3 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CCheckBox.__N.CCheck_CreateCheckBox = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CComboBox.__N.CCmbBx_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CDataDelegate.__N.From_QObject_To_CDataDelegate = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CDataDelegate.__N.To_QObject_From_CDataDelegate = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CDataDelegate.__N.CDtDel_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CDataDelegate.__N.CDtDel_deleteLater = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CDataDelegate.__N.CDtDel_objectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CDataDelegate.__N.CDtDel_setObjectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CDataDelegate.__N.CDtDel_setProperty = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CDataDelegate.__N.CDtDel_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CDataDelegate.__N.CDtDel_f3 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CDataModel.__N.From_QObject_To_CDataModel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CDataModel.__N.To_QObject_From_CDataModel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CDataModel.__N.CDtMde_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CDataModel.__N.CDtMde_LayoutChanged = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CDataModel.__N.CDtMde_DataChanged = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CDataModel.__N.CDtMde_deleteLater = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CDataModel.__N.CDtMde_objectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CDataModel.__N.CDtMde_setObjectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CDataModel.__N.CDtMde_setProperty = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CDataModel.__N.CDtMde_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CDataModel.__N.CDtMde_f3 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CDockWidget.__N.CDckWd_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFrame.__N.CFrame_CreateFrame = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.From_QMainWindow_To_CFramelessMainWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.To_QMainWindow_From_CFramelessMainWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.From_QWidget_To_CFramelessMainWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.To_QWidget_From_CFramelessMainWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.From_QObject_To_CFramelessMainWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.To_QObject_From_CFramelessMainWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_NativeWindowDoubleClick = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_NativeStartMouseDown = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setProxyControls = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_iconSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setIconSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_menuBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setMenuBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setMenuWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_statusBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setStatusBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_centralWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setCentralWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_addDockWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_tabifyDockWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_isAnimated = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setAnimated = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_addToolBarBreak = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_insertToolBarBreak = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_addToolBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_insertToolBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_removeToolBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_removeToolBarBreak = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_saveState = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_restoreState = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CFramelessMainWindow.__N.CFrmel_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CLineEdit.__N.CLneEd_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CLineEdit.__N.CLneEd_SetValidation = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.From_QListView_To_CListView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.To_QListView_From_CListView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.From_QWidget_To_CListView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.To_QWidget_From_CListView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.From_QObject_To_CListView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.To_QObject_From_CListView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setModelInternal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setItemDelegate = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_uniformItemSizes = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setUniformItemSizes = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setModelColumn = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_modelColumn = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setWordWrap = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_wordWrap = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setWrapping = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_isWrapping = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setViewMode = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_viewMode = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setLayoutMode = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_layoutMode = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setFlow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_flow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setMovement = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_movement = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setResizeMode = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_resizeMode = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setBatchSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_batchSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setGridSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_gridSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_visualRect = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_scrollTo = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_indexAt = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setRootIndex = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_rootIndex = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_selectionModel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CListView.__N.CLstVe_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.From_QGraphicsItem_To_CManagedGraphicsItem = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.To_QGraphicsItem_From_CManagedGraphicsItem = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_DeleteThis = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_isSelected = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_setSelected = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_opacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_effectiveOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_setOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_setPos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_setRotation = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_rotation = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_setScale = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_scale = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_zValue = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_setZValue = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_flags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_setFlag = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_stackBefore = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_setParentItem = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_acceptHoverEvents = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_setAcceptHoverEvents = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_mapToItem = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_mapToParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_mapToScene = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_mapFromItem = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_mapFromParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_mapFromScene = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedGraphicsItem.__N.CMnged_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.From_CManagedGraphicsItem_To_CManagedLineGraphicsItem = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.To_CManagedGraphicsItem_From_CManagedLineGraphicsItem = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.From_QGraphicsItem_To_CManagedLineGraphicsItem = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.To_QGraphicsItem_From_CManagedLineGraphicsItem = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_CreateLine = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_Clear = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_MoveTo = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_LineTo = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_CubicTo = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_paint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f3 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f4 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f5 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f6 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f7 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f8 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f9 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f10 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f11 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f12 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f13 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f14 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f15 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f16 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f17 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f18 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f19 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f20 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f21 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f22 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f23 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f24 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f25 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f26 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f27 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f28 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f29 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f30 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f31 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f32 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f33 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f34 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f35 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.CMnged_f36 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.Get__CMnged_HitWidth = Marshal.GetDelegateForFunctionPointer<CManagedLineGraphicsItem.__N._Get__CMnged_HitWidth>(exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				num = i;
				i = num + 1;
				CManagedLineGraphicsItem.__N.Set__CMnged_HitWidth = Marshal.GetDelegateForFunctionPointer<CManagedLineGraphicsItem.__N._Set__CMnged_HitWidth>(exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.From_CFramelessMainWindow_To_CManagedMainWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.To_CFramelessMainWindow_From_CManagedMainWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.From_QMainWindow_To_CManagedMainWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.To_QMainWindow_From_CManagedMainWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.From_QWidget_To_CManagedMainWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.To_QWidget_From_CManagedMainWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.From_QObject_To_CManagedMainWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.To_QObject_From_CManagedMainWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_f37 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_NativeWindowDoubleClick = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_NativeStartMouseDown = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setProxyControls = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_iconSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setIconSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_menuBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setMenuBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setMenuWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_statusBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setStatusBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_centralWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setCentralWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_addDockWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_tabifyDockWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_isAnimated = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setAnimated = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_addToolBarBreak = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_insertToolBarBreak = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_addToolBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_f38 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_insertToolBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_removeToolBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_removeToolBarBreak = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_saveState = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_restoreState = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_f39 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_f40 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_f41 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_f42 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_f43 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_f44 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_f45 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_f46 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_f47 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_f48 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CManagedMainWindow.__N.CMnged_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CMenuBar.__N.CMenBr_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CPlainTextEdit.__N.CPlnTe_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CPushButton.__N.CPshBt_CreatePushButton = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CStatusBar.__N.CSttsB_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CSystemTrayIcon.__N.From_QObject_To_CSystemTrayIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CSystemTrayIcon.__N.To_QObject_From_CSystemTrayIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CSystemTrayIcon.__N.CSyste_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CSystemTrayIcon.__N.CSyste_setIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CSystemTrayIcon.__N.CSyste_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CSystemTrayIcon.__N.CSyste_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CSystemTrayIcon.__N.CSyste_showMessage = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CSystemTrayIcon.__N.CSyste_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CSystemTrayIcon.__N.CSyste_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CSystemTrayIcon.__N.CSyste_setContextMenu = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CSystemTrayIcon.__N.CSyste_deleteLater = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CSystemTrayIcon.__N.CSyste_objectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CSystemTrayIcon.__N.CSyste_setObjectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CSystemTrayIcon.__N.CSyste_setProperty = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CSystemTrayIcon.__N.CSyste_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CSystemTrayIcon.__N.CSyste_f3 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CToolBar.__N.CToolB_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.From_QTreeView_To_CTreeView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.To_QTreeView_From_CTreeView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.From_QWidget_To_CTreeView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.To_QWidget_From_CTreeView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.From_QObject_To_CTreeView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.To_QObject_From_CTreeView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setModelInternal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setIndexWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_isHeaderHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setHeaderHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_autoExpandDelay = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setAutoExpandDelay = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_indentation = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setIndentation = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_resetIndentation = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_itemsExpandable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setItemsExpandable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_expandsOnDoubleClick = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setExpandsOnDoubleClick = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_columnViewportPosition = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_columnWidth = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setColumnWidth = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_columnAt = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_isColumnHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setColumnHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_isExpanded = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setExpanded = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setSortingEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_isSortingEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setAnimated = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_isAnimated = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setAllColumnsShowFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_allColumnsShowFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setWordWrap = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_wordWrap = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setTreePosition = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_treePosition = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_visualRect = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_scrollTo = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_indexAt = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_indexAbove = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_indexBelow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_uniformRowHeights = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setUniformRowHeights = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setItemDelegate = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CTreeView.__N.CTreeV_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				CWidget.__N.CWdget_CreateWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				g_pToolFramework2.__N.gpTlFr_BringEngineWindowToFront = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				g_pToolFramework2.__N.gpTlFr_ReturnFromEngineWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ManagedEventFilter.__N.From_QObject_To_ManagedEventFilter = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ManagedEventFilter.__N.To_QObject_From_ManagedEventFilter = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ManagedEventFilter.__N.MngedE_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ManagedEventFilter.__N.MngedE_deleteLater = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ManagedEventFilter.__N.MngedE_objectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ManagedEventFilter.__N.MngedE_setObjectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ManagedEventFilter.__N.MngedE_setProperty = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ManagedEventFilter.__N.MngedE_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ManagedEventFilter.__N.MngedE_f3 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.From_QWidget_To_QAbstractButton = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.To_QWidget_From_QAbstractButton = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.From_QObject_To_QAbstractButton = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.To_QObject_From_QAbstractButton = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_text = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setCheckable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_isCheckable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_isChecked = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setDown = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_isDown = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setIconSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_animateClick = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_click = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_toggle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setChecked = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setAutoRepeat = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_autoRepeat = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setAutoRepeatDelay = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_autoRepeatDelay = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setAutoRepeatInterval = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_autoRepeatInterval = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setAutoExclusive = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_autoExclusive = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractButton.__N.QAbstr_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractScrollArea.__N.From_QFrame_To_QAbstractScrollArea = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractScrollArea.__N.To_QFrame_From_QAbstractScrollArea = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractScrollArea.__N.From_QWidget_To_QAbstractScrollArea = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractScrollArea.__N.To_QWidget_From_QAbstractScrollArea = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractScrollArea.__N.From_QObject_To_QAbstractScrollArea = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractScrollArea.__N.To_QObject_From_QAbstractScrollArea = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractScrollArea.__N.QAbstr_horizontalScrollBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractScrollArea.__N.QAbstr_verticalScrollBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractScrollArea.__N.QAbstr_horizontalScrollBarPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractScrollArea.__N.QAbstr_setHorizontalScrollBarPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractScrollArea.__N.QAbstr_verticalScrollBarPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAbstractScrollArea.__N.QAbstr_setVerticalScrollBarPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.From_QObject_To_QAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.To_QObject_From_QAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_setText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_text = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_setIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_setSeparator = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_isSeparator = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_setCheckable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_isCheckable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_isChecked = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_setChecked = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_setIconVisibleInMenu = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_isIconVisibleInMenu = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_setShortcutVisibleInContextMenu = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_isShortcutVisibleInContextMenu = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_trigger = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_setMenu = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_setShortcut = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_deleteLater = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_objectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_setObjectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_setProperty = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QAction.__N.QActio_f3 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QApp.__N.qApp_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QApp.__N.qApp_processEvents = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.From_QLayout_To_QBoxLayout = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.To_QLayout_From_QBoxLayout = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.From_QObject_To_QBoxLayout = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.To_QObject_From_QBoxLayout = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_direction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_setDirection = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_addSpacing = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_addStretch = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_setStretchFactor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_setStretch = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_stretch = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_addWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_addLayout = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_spacing = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_setSpacing = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_setContentsMargins = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_f3 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_removeWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_addItem = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_removeItem = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_deleteLater = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_objectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_setObjectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_setProperty = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_f4 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBoxLayout.__N.QBxLyt_f5 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBrush.__N.QBrush_Dispose = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBrush.__N.QBrush_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBrush.__N.QBrush_FromImage = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBrush.__N.QBrush_CreateFromColor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QBrush.__N.QBrush_setColor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.From_QAbstractButton_To_QCheckBox = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.To_QAbstractButton_From_QCheckBox = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.From_QWidget_To_QCheckBox = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.To_QWidget_From_QCheckBox = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.From_QObject_To_QCheckBox = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.To_QObject_From_QCheckBox = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setTristate = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_isTristate = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_checkState = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setCheckState = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_text = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setCheckable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_isCheckable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_isChecked = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setDown = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_isDown = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setIconSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_animateClick = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_click = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_toggle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setChecked = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setAutoRepeat = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_autoRepeat = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setAutoRepeatDelay = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_autoRepeatDelay = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setAutoRepeatInterval = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_autoRepeatInterval = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setAutoExclusive = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_autoExclusive = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QCheckBox.__N.QCheck_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.From_QWidget_To_QComboBox = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.To_QWidget_From_QComboBox = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.From_QObject_To_QComboBox = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.To_QObject_From_QComboBox = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_maxVisibleItems = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setMaxVisibleItems = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_count = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setMaxCount = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_maxCount = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_duplicatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setDuplicatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setFrame = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_hasFrame = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_insertPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setInsertPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_minimumContentsLength = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setMinimumContentsLength = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_iconSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setIconSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_isEditable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setEditable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setLineEdit = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_lineEdit = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_modelColumn = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setModelColumn = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_currentIndex = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_currentText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_itemText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_addItem = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_removeItem = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setItemText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setItemIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_showPopup = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_hidePopup = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_clear = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_clearEditText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setEditText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setCurrentIndex = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setCurrentText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_findText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QComboBox.__N.QCmbBx_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QContextMenuEvent.__N.From_QInputEvent_To_QContextMenuEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QContextMenuEvent.__N.To_QInputEvent_From_QContextMenuEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QContextMenuEvent.__N.From_QEvent_To_QContextMenuEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QContextMenuEvent.__N.To_QEvent_From_QContextMenuEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QContextMenuEvent.__N.QCntex_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QContextMenuEvent.__N.QCntex_globalPos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QContextMenuEvent.__N.QCntex_modifiers = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QContextMenuEvent.__N.QCntex_timestamp = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QContextMenuEvent.__N.QCntex_accept = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QContextMenuEvent.__N.QCntex_ignore = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QContextMenuEvent.__N.QCntex_isAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QContextMenuEvent.__N.QCntex_spontaneous = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QContextMenuEvent.__N.QCntex_setAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.From_QWidget_To_QDockWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.To_QWidget_From_QDockWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.From_QObject_To_QDockWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.To_QObject_From_QDockWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_widget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setFeatures = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_features = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setFloating = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_isFloating = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setAllowedAreas = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_allowedAreas = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_toggleViewAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDockWidget.__N.QDckWd_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDrag.__N.From_QObject_To_QDrag = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDrag.__N.To_QObject_From_QDrag = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDrag.__N.QDrag_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDrag.__N.QDrag_setPixmap = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDrag.__N.QDrag_setHotSpot = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDrag.__N.QDrag_setMimeData = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDrag.__N.QDrag_mimeData = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDrag.__N.QDrag_exec = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDrag.__N.QDrag_deleteLater = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDrag.__N.QDrag_objectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDrag.__N.QDrag_setObjectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDrag.__N.QDrag_setProperty = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDrag.__N.QDrag_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDrag.__N.QDrag_f3 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragEnterEvent.__N.From_QDragMoveEvent_To_QDragEnterEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragEnterEvent.__N.To_QDragMoveEvent_From_QDragEnterEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragEnterEvent.__N.From_QDropEvent_To_QDragEnterEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragEnterEvent.__N.To_QDropEvent_From_QDragEnterEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragEnterEvent.__N.From_QEvent_To_QDragEnterEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragEnterEvent.__N.To_QEvent_From_QDragEnterEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragEnterEvent.__N.QDrgEn_acceptProposedAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragEnterEvent.__N.QDrgEn_mimeData = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragEnterEvent.__N.QDrgEn_source = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragEnterEvent.__N.QDrgEn_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragEnterEvent.__N.QDrgEn_mouseButtons = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragEnterEvent.__N.QDrgEn_keyboardModifiers = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragEnterEvent.__N.QDrgEn_setDropAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragEnterEvent.__N.QDrgEn_accept = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragEnterEvent.__N.QDrgEn_ignore = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragEnterEvent.__N.QDrgEn_isAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragEnterEvent.__N.QDrgEn_spontaneous = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragEnterEvent.__N.QDrgEn_setAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragLeaveEvent.__N.From_QEvent_To_QDragLeaveEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragLeaveEvent.__N.To_QEvent_From_QDragLeaveEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragLeaveEvent.__N.QDrgLe_accept = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragLeaveEvent.__N.QDrgLe_ignore = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragLeaveEvent.__N.QDrgLe_isAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragLeaveEvent.__N.QDrgLe_spontaneous = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragLeaveEvent.__N.QDrgLe_setAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragMoveEvent.__N.From_QDropEvent_To_QDragMoveEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragMoveEvent.__N.To_QDropEvent_From_QDragMoveEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragMoveEvent.__N.From_QEvent_To_QDragMoveEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragMoveEvent.__N.To_QEvent_From_QDragMoveEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragMoveEvent.__N.QDrgMv_acceptProposedAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragMoveEvent.__N.QDrgMv_mimeData = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragMoveEvent.__N.QDrgMv_source = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragMoveEvent.__N.QDrgMv_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragMoveEvent.__N.QDrgMv_mouseButtons = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragMoveEvent.__N.QDrgMv_keyboardModifiers = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragMoveEvent.__N.QDrgMv_setDropAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragMoveEvent.__N.QDrgMv_accept = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragMoveEvent.__N.QDrgMv_ignore = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragMoveEvent.__N.QDrgMv_isAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragMoveEvent.__N.QDrgMv_spontaneous = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDragMoveEvent.__N.QDrgMv_setAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDropEvent.__N.From_QEvent_To_QDropEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDropEvent.__N.To_QEvent_From_QDropEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDropEvent.__N.QDrpEv_acceptProposedAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDropEvent.__N.QDrpEv_mimeData = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDropEvent.__N.QDrpEv_source = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDropEvent.__N.QDrpEv_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDropEvent.__N.QDrpEv_mouseButtons = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDropEvent.__N.QDrpEv_keyboardModifiers = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDropEvent.__N.QDrpEv_setDropAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDropEvent.__N.QDrpEv_accept = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDropEvent.__N.QDrpEv_ignore = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDropEvent.__N.QDrpEv_isAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDropEvent.__N.QDrpEv_spontaneous = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QDropEvent.__N.QDrpEv_setAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QEvent.__N.QEvent_accept = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QEvent.__N.QEvent_ignore = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QEvent.__N.QEvent_isAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QEvent.__N.QEvent_spontaneous = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QEvent.__N.QEvent_setAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.From_QWidget_To_QFileDialog = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.To_QWidget_From_QFileDialog = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.From_QObject_To_QFileDialog = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.To_QObject_From_QFileDialog = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_exec = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setResult = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setDirectory = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_directory = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_selectFile = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setNameFilter = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_nameFilters = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_selectNameFilter = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_selectedMimeTypeFilter = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_selectedNameFilter = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setAcceptMode = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_acceptMode = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setDefaultSuffix = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_defaultSuffix = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_selectedFiles = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setFileMode = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_fileMode = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setOption = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFileDialog.__N.QFleDl_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFontDatabase.__N.QFntDt_addApplicationFont = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.From_QWidget_To_QFrame = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.To_QWidget_From_QFrame = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.From_QObject_To_QFrame = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.To_QObject_From_QFrame = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QFrame.__N.QFrame_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_DeleteThis = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_isSelected = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_setSelected = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_opacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_effectiveOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_setOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_setPos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_setRotation = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_rotation = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_setScale = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_scale = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_zValue = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_setZValue = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_flags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_setFlag = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_stackBefore = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_setParentItem = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_acceptHoverEvents = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_setAcceptHoverEvents = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_mapToItem = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_mapToParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_mapToScene = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_mapFromItem = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_mapFromParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_mapFromScene = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsItem.__N.QGrphc_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.From_QGraphicsItem_To_QGraphicsProxyWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.To_QGraphicsItem_From_QGraphicsProxyWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_setWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_widget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f3 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f4 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f5 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f6 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f7 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f8 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f9 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f10 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f11 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f12 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f13 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f14 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f15 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f16 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f17 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f18 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f19 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f20 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f21 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f22 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f23 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f24 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f25 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f26 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f27 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f28 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f29 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f30 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f31 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f32 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f33 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f34 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f35 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsProxyWidget.__N.QGrphc_f36 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsScene.__N.From_QObject_To_QGraphicsScene = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsScene.__N.To_QObject_From_QGraphicsScene = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsScene.__N.QGrphc_sceneRect = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsScene.__N.QGrphc_setSceneRect = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsScene.__N.QGrphc_itemsBoundingRect = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsScene.__N.QGrphc_addItem = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsScene.__N.QGrphc_removeItem = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsScene.__N.QGrphc_deleteLater = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsScene.__N.QGrphc_objectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsScene.__N.QGrphc_setObjectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsScene.__N.QGrphc_setProperty = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsScene.__N.QGrphc_f37 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsScene.__N.QGrphc_f38 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSceneHoverEvent.__N.From_QEvent_To_QGraphicsSceneHoverEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSceneHoverEvent.__N.To_QEvent_From_QGraphicsSceneHoverEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSceneHoverEvent.__N.QGrphc_f39 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSceneHoverEvent.__N.QGrphc_scenePos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSceneHoverEvent.__N.QGrphc_screenPos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSceneHoverEvent.__N.QGrphc_accept = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSceneHoverEvent.__N.QGrphc_ignore = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSceneHoverEvent.__N.QGrphc_isAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSceneHoverEvent.__N.QGrphc_spontaneous = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSceneHoverEvent.__N.QGrphc_setAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSceneMouseEvent.__N.From_QEvent_To_QGraphicsSceneMouseEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSceneMouseEvent.__N.To_QEvent_From_QGraphicsSceneMouseEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSceneMouseEvent.__N.QGrphc_f40 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSceneMouseEvent.__N.QGrphc_f41 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSceneMouseEvent.__N.QGrphc_f42 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSceneMouseEvent.__N.QGrphc_f43 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSceneMouseEvent.__N.QGrphc_buttons = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSceneMouseEvent.__N.QGrphc_f44 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSceneMouseEvent.__N.QGrphc_f45 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSceneMouseEvent.__N.QGrphc_f46 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSceneMouseEvent.__N.QGrphc_f47 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSceneMouseEvent.__N.QGrphc_f48 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.From_QGraphicsItem_To_QGraphicsSimpleTextItem = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.To_QGraphicsItem_From_QGraphicsSimpleTextItem = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_setText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_text = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f49 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f50 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f51 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f52 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f53 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f54 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f55 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f56 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f57 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f58 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f59 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f60 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f61 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f62 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f63 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f64 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f65 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f66 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f67 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f68 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f69 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f70 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f71 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f72 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f73 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f74 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f75 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f76 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f77 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f78 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f79 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f80 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f81 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f82 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsSimpleTextItem.__N.QGrphc_f83 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.From_QFrame_To_QGraphicsView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.To_QFrame_From_QGraphicsView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.From_QWidget_To_QGraphicsView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.To_QWidget_From_QGraphicsView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.From_QObject_To_QGraphicsView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.To_QObject_From_QGraphicsView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_isInteractive = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setInteractive = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_resetTransform = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_rotate = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_f84 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_shear = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_translate = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_centerOn = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_ensureVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_fitInView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_f85 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_f86 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_scene = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setScene = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_horizontalScrollBarPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setHorizontalScrollBarPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_verticalScrollBarPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setVerticalScrollBarPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setBackgroundBrush = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_transformationAnchor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setTransformationAnchor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_f87 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_f88 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setRenderHint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_itemAt = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_f89 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_f90 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_f91 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_f92 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_f93 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_f94 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_f95 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_f96 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_f97 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_f98 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_f99 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_f100 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_f101 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_f102 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_f103 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_f104 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_f105 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_f106 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QGraphicsView.__N.QGrphc_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QInputEvent.__N.From_QEvent_To_QInputEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QInputEvent.__N.To_QEvent_From_QInputEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QInputEvent.__N.QInptE_modifiers = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QInputEvent.__N.QInptE_timestamp = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QInputEvent.__N.QInptE_accept = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QInputEvent.__N.QInptE_ignore = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QInputEvent.__N.QInptE_isAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QInputEvent.__N.QInptE_spontaneous = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QInputEvent.__N.QInptE_setAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QItemSelectionModel.__N.QItemS_currentIndex = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QItemSelectionModel.__N.QItemS_hasSelection = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QItemSelectionModel.__N.QItemS_selectedIndexes = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QItemSelectionModel.__N.QItemS_clearSelection = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QItemSelectionModel.__N.QItemS_clearCurrentIndex = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QKeyEvent.__N.From_QInputEvent_To_QKeyEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QKeyEvent.__N.To_QInputEvent_From_QKeyEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QKeyEvent.__N.From_QEvent_To_QKeyEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QKeyEvent.__N.To_QEvent_From_QKeyEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QKeyEvent.__N.QKeyEv_text = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QKeyEvent.__N.QKeyEv_isAutoRepeat = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QKeyEvent.__N.QKeyEv_count = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QKeyEvent.__N.QKeyEv_key = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QKeyEvent.__N.QKeyEv_modifiers = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QKeyEvent.__N.QKeyEv_timestamp = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QKeyEvent.__N.QKeyEv_accept = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QKeyEvent.__N.QKeyEv_ignore = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QKeyEvent.__N.QKeyEv_isAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QKeyEvent.__N.QKeyEv_spontaneous = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QKeyEvent.__N.QKeyEv_setAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.From_QFrame_To_QLabel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.To_QFrame_From_QLabel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.From_QWidget_To_QLabel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.To_QWidget_From_QLabel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.From_QObject_To_QLabel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.To_QObject_From_QLabel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_text = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setWordWrap = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_wordWrap = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_indent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setIndent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_margin = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setMargin = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_openExternalLinks = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setOpenExternalLinks = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_hasSelectedText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_selectedText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLabel.__N.QLabel_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLayout.__N.From_QObject_To_QLayout = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLayout.__N.To_QObject_From_QLayout = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLayout.__N.QLayou_spacing = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLayout.__N.QLayou_setSpacing = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLayout.__N.QLayou_setContentsMargins = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLayout.__N.QLayou_addWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLayout.__N.QLayou_removeWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLayout.__N.QLayou_addItem = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLayout.__N.QLayou_removeItem = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLayout.__N.QLayou_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLayout.__N.QLayou_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLayout.__N.QLayou_deleteLater = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLayout.__N.QLayou_objectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLayout.__N.QLayou_setObjectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLayout.__N.QLayou_setProperty = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLayout.__N.QLayou_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLayout.__N.QLayou_f3 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.From_QWidget_To_QLineEdit = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.To_QWidget_From_QLineEdit = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.From_QObject_To_QLineEdit = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.To_QObject_From_QLineEdit = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_text = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_displayText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_placeholderText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setPlaceholderText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_maxLength = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setMaxLength = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setFrame = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_hasFrame = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setClearButtonEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_isClearButtonEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_isReadOnly = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setReadOnly = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_cursorPosition = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setCursorPosition = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_hasSelectedText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_selectedText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_clear = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_selectAll = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_undo = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_redo = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_cut = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_copy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_paste = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_deselect = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_insert = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QLineEdit.__N.QLneEd_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.From_QWidget_To_QListView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.To_QWidget_From_QListView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.From_QObject_To_QListView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.To_QObject_From_QListView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setItemDelegate = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_uniformItemSizes = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setUniformItemSizes = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setModelColumn = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_modelColumn = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setWordWrap = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_wordWrap = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setWrapping = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_isWrapping = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setViewMode = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_viewMode = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setLayoutMode = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_layoutMode = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setFlow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_flow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setMovement = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_movement = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setResizeMode = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_resizeMode = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setBatchSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_batchSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setGridSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_gridSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_visualRect = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_scrollTo = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_indexAt = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setRootIndex = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_rootIndex = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_selectionModel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QListView.__N.QLstVe_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.From_QWidget_To_QMainWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.To_QWidget_From_QMainWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.From_QObject_To_QMainWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.To_QObject_From_QMainWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_iconSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setIconSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_menuBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setMenuBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setMenuWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_statusBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setStatusBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_centralWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setCentralWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_addDockWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_tabifyDockWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_isAnimated = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setAnimated = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_addToolBarBreak = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_insertToolBarBreak = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_addToolBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_insertToolBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_removeToolBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_removeToolBarBreak = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_saveState = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_restoreState = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMainWindow.__N.QMnWnd_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.From_QWidget_To_QMenu = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.To_QWidget_From_QMenu = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.From_QObject_To_QMenu = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.To_QObject_From_QMenu = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_insertAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_addSeparator = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_isEmpty = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_clear = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_title = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_exec = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_activeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_addMenu = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_insertMenu = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setTearOffEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_isTearOffEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenu.__N.QMenu_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.From_QWidget_To_QMenuBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.To_QWidget_From_QMenuBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.From_QObject_To_QMenuBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.To_QObject_From_QMenuBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_insertAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_addMenu = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_insertMenu = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_addSeparator = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_clear = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMenuBar.__N.QMenBr_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMimeData.__N.From_QObject_To_QMimeData = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMimeData.__N.To_QObject_From_QMimeData = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMimeData.__N.QMmeDt_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMimeData.__N.QMmeDt_text = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMimeData.__N.QMmeDt_setText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMimeData.__N.QMmeDt_html = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMimeData.__N.QMmeDt_setHtml = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMimeData.__N.QMmeDt_clear = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMimeData.__N.QMmeDt_deleteLater = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMimeData.__N.QMmeDt_objectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMimeData.__N.QMmeDt_setObjectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMimeData.__N.QMmeDt_setProperty = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMimeData.__N.QMmeDt_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMimeData.__N.QMmeDt_f3 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QModelIndexList.__N.QMdelI_Dispose = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QModelIndexList.__N.QMdelI_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QModelIndexList.__N.QMdelI_at = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMouseEvent.__N.From_QInputEvent_To_QMouseEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMouseEvent.__N.To_QInputEvent_From_QMouseEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMouseEvent.__N.From_QEvent_To_QMouseEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMouseEvent.__N.To_QEvent_From_QMouseEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMouseEvent.__N.QMseEv_localPos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMouseEvent.__N.QMseEv_windowPos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMouseEvent.__N.QMseEv_screenPos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMouseEvent.__N.QMseEv_buttons = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMouseEvent.__N.QMseEv_button = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMouseEvent.__N.QMseEv_modifiers = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMouseEvent.__N.QMseEv_timestamp = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMouseEvent.__N.QMseEv_accept = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMouseEvent.__N.QMseEv_ignore = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMouseEvent.__N.QMseEv_isAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMouseEvent.__N.QMseEv_spontaneous = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMouseEvent.__N.QMseEv_setAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMoveEvent.__N.From_QEvent_To_QMoveEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMoveEvent.__N.To_QEvent_From_QMoveEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMoveEvent.__N.QMveEv_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMoveEvent.__N.QMveEv_oldPos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMoveEvent.__N.QMveEv_accept = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMoveEvent.__N.QMveEv_ignore = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMoveEvent.__N.QMveEv_isAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMoveEvent.__N.QMveEv_spontaneous = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QMoveEvent.__N.QMveEv_setAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				Native.QObject.__N.QObjec_deleteLater = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				Native.QObject.__N.QObjec_objectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				Native.QObject.__N.QObjec_setObjectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				Native.QObject.__N.QObjec_setProperty = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				Native.QObject.__N.QObjec_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				Native.QObject.__N.QObjec_f3 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPainter.__N.QPnter_drawLine = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPainter.__N.QPnter_drawRoundedRect = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPainter.__N.QPnter_drawRect = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPainter.__N.QPnter_drawEllipse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPainter.__N.QPnter_opacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPainter.__N.QPnter_setOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPainter.__N.QPnter_setBrush = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPainter.__N.QPnter_setPen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPainter.__N.QPnter_drawText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPainter.__N.QPnter_boundingRect = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPainter.__N.QPnter_translate = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPainter.__N.QPnter_drawPoint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPainter.__N.QPnter_setRenderHint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPainter.__N.QPnter_drawPixmap = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPainter.__N.QPnter_drawTiledPixmap = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPen.__N.QPen_Dispose = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPen.__N.QPen_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPen.__N.QPen_setDashOffset = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPen.__N.QPen_setMiterLimit = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPen.__N.QPen_setWidthF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPen.__N.QPen_setColor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPen.__N.QPen_setBrush = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPen.__N.QPen_setCosmetic = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPixmap.__N.QPixma_Dispose = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPixmap.__N.QPixma_CreateFromFile = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPixmap.__N.QPixma_Create = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPixmap.__N.QPixma_width = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPixmap.__N.QPixma_height = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPixmap.__N.QPixma_depth = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPixmap.__N.QPixma_fill = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.From_QAbstractScrollArea_To_QPlainTextEdit = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.To_QAbstractScrollArea_From_QPlainTextEdit = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.From_QFrame_To_QPlainTextEdit = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.To_QFrame_From_QPlainTextEdit = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.From_QWidget_To_QPlainTextEdit = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.To_QWidget_From_QPlainTextEdit = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.From_QObject_To_QPlainTextEdit = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.To_QObject_From_QPlainTextEdit = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_document = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setPlaceholderText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_placeholderText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_isReadOnly = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setReadOnly = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setTextInteractionFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_textInteractionFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_tabChangesFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setTabChangesFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setDocumentTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_documentTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_isUndoRedoEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setUndoRedoEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setMaximumBlockCount = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_maximumBlockCount = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_lineWrapMode = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setLineWrapMode = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_wordWrapMode = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setWordWrapMode = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setBackgroundVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_backgroundVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setCenterOnScroll = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_centerOnScroll = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_find = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_toPlainText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setPlainText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_ensureCursorVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_insertPlainText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_appendPlainText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_appendHtml = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_centerCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_clear = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_selectAll = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_anchorAt = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setTextCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_textCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_cursorForPosition = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_cursorRect = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_tabStopDistance = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setTabStopDistance = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_viewport = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_horizontalScrollBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_verticalScrollBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_horizontalScrollBarPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setHorizontalScrollBarPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_verticalScrollBarPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setVerticalScrollBarPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPlainTextEdit.__N.QPlnTe_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.From_QAbstractButton_To_QPushButton = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.To_QAbstractButton_From_QPushButton = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.From_QWidget_To_QPushButton = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.To_QWidget_From_QPushButton = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.From_QObject_To_QPushButton = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.To_QObject_From_QPushButton = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_text = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setCheckable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_isCheckable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_isChecked = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setDown = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_isDown = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setIconSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_animateClick = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_click = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_toggle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setChecked = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setAutoRepeat = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_autoRepeat = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setAutoRepeatDelay = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_autoRepeatDelay = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setAutoRepeatInterval = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_autoRepeatInterval = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setAutoExclusive = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_autoExclusive = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QPushButton.__N.QPshBt_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QResizeEvent.__N.From_QEvent_To_QResizeEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QResizeEvent.__N.To_QEvent_From_QResizeEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QResizeEvent.__N.QResze_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QResizeEvent.__N.QResze_oldSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QResizeEvent.__N.QResze_accept = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QResizeEvent.__N.QResze_ignore = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QResizeEvent.__N.QResze_isAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QResizeEvent.__N.QResze_spontaneous = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QResizeEvent.__N.QResze_setAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.From_QAbstractScrollArea_To_QScrollArea = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.To_QAbstractScrollArea_From_QScrollArea = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.From_QFrame_To_QScrollArea = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.To_QFrame_From_QScrollArea = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.From_QWidget_To_QScrollArea = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.To_QWidget_From_QScrollArea = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.From_QObject_To_QScrollArea = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.To_QObject_From_QScrollArea = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_CreateQScrollArea = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_ensureVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_ensureWidgetVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_widgetResizable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setWidgetResizable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_widget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_horizontalScrollBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_verticalScrollBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_horizontalScrollBarPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setHorizontalScrollBarPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_verticalScrollBarPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setVerticalScrollBarPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollArea.__N.QScrll_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.From_QWidget_To_QScrollBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.To_QWidget_From_QScrollBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.From_QObject_To_QScrollBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.To_QObject_From_QScrollBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_setMinimum = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_minimum = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_setMaximum = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_maximum = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_setSingleStep = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_singleStep = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_setPageStep = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_pageStep = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_setTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_hasTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_setSliderDown = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_isSliderDown = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_setSliderPosition = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_sliderPosition = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_setInvertedAppearance = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_invertedAppearance = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_setInvertedControls = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_invertedControls = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f3 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f4 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f5 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f6 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f7 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f8 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f9 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f10 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f11 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f12 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f13 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f14 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f15 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f16 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f17 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f18 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f19 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f20 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f21 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f22 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f23 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f24 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f25 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f26 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f27 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f28 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f29 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f30 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f31 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f32 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f33 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f34 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f35 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f36 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f37 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f38 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f39 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f40 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f41 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f42 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f43 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f44 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f45 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f46 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f47 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f48 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f49 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f50 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f51 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f52 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f53 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f54 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f55 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f56 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f57 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f58 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f59 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f60 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f61 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f62 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f63 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f64 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f65 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f66 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f67 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f68 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f69 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f70 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f71 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f72 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f73 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f74 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f75 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f76 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f77 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f78 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QScrollBar.__N.QScrll_f79 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.From_QWidget_To_QStatusBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.To_QWidget_From_QStatusBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.From_QObject_To_QStatusBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.To_QObject_From_QStatusBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_currentMessage = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_showMessage = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_clearMessage = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setSizeGripEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_isSizeGripEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_addWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_insertWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_addPermanentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_insertPermanentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_removeWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStatusBar.__N.QSttsB_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStringList.__N.QStrng_Dispose = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStringList.__N.QStrng_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QStringList.__N.QStrng_at = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.From_QWidget_To_QTabBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.To_QWidget_From_QTabBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.From_QObject_To_QTabBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.To_QObject_From_QTabBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTabBar.__N.QTabBa_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextBlock.__N.QTextB_Dispose = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextBlock.__N.QTextB_position = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextBlock.__N.QTextB_length = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextBlock.__N.QTextB_text = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextBlock.__N.QTextB_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextBlock.__N.QTextB_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextBlock.__N.QTextB_blockNumber = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextBlock.__N.QTextB_firstLineNumber = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextBlock.__N.QTextB_setLineCount = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextBlock.__N.QTextB_lineCount = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextBlock.__N.QTextB_next = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextBlock.__N.QTextB_previous = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				TextCursor.__N.QTextC_CreateFromBlock = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				TextCursor.__N.QTextC_Dispose = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				TextCursor.__N.QTextC_blockNumber = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				TextCursor.__N.QTextC_columnNumber = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				TextCursor.__N.QTextC_selectedText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				TextCursor.__N.QTextC_atBlockStart = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				TextCursor.__N.QTextC_atBlockEnd = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				TextCursor.__N.QTextC_atStart = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				TextCursor.__N.QTextC_atEnd = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				TextCursor.__N.QTextC_insertHtml = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				TextCursor.__N.QTextC_insertText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				TextCursor.__N.QTextC_hasSelection = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				TextCursor.__N.QTextC_hasComplexSelection = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				TextCursor.__N.QTextC_removeSelectedText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				TextCursor.__N.QTextC_clearSelection = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				TextCursor.__N.QTextC_selectionStart = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				TextCursor.__N.QTextC_selectionEnd = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				TextCursor.__N.QTextC_position = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				TextCursor.__N.QTextC_positionInBlock = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				TextCursor.__N.QTextC_setPosition = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				TextCursor.__N.QTextC_deleteChar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				TextCursor.__N.QTextC_deletePreviousChar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				TextCursor.__N.QTextC_select = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.From_QObject_To_QTextDocument = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.To_QObject_From_QTextDocument = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.QTextD_toRawText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.QTextD_toPlainText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.QTextD_setPlainText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.QTextD_setDefaultStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.QTextD_blockCount = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.QTextD_lineCount = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.QTextD_characterCount = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.QTextD_isModified = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.QTextD_pageCount = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.QTextD_findBlock = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.QTextD_findBlockByNumber = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.QTextD_findBlockByLineNumber = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.QTextD_begin = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.QTextD_end = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.QTextD_firstBlock = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.QTextD_lastBlock = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.QTextD_deleteLater = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.QTextD_objectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.QTextD_setObjectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.QTextD_setProperty = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.QTextD_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTextDocument.__N.QTextD_f3 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.From_QWidget_To_QToolBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.To_QWidget_From_QToolBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.From_QObject_To_QToolBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.To_QObject_From_QToolBar = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setMovable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_isMovable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setAllowedAreas = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_allowedAreas = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_clear = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_insertAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_insertWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_addWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_addSeparator = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_isFloatable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setFloatable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_isFloating = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setIconSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QToolBar.__N.QToolB_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.From_QWidget_To_QTreeView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.To_QWidget_From_QTreeView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.From_QObject_To_QTreeView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.To_QObject_From_QTreeView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setIndexWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_isHeaderHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setHeaderHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_autoExpandDelay = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setAutoExpandDelay = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_indentation = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setIndentation = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_resetIndentation = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_itemsExpandable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setItemsExpandable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_expandsOnDoubleClick = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setExpandsOnDoubleClick = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_columnViewportPosition = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_columnWidth = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setColumnWidth = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_columnAt = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_isColumnHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setColumnHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_isExpanded = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setExpanded = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setSortingEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_isSortingEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setAnimated = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_isAnimated = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setAllColumnsShowFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_allColumnsShowFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setWordWrap = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_wordWrap = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setTreePosition = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_treePosition = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_visualRect = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_scrollTo = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_indexAt = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_indexAbove = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_indexBelow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_uniformRowHeights = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setUniformRowHeights = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setItemDelegate = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QTreeView.__N.QTreeV_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWheelEvent.__N.From_QInputEvent_To_QWheelEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWheelEvent.__N.To_QInputEvent_From_QWheelEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWheelEvent.__N.From_QEvent_To_QWheelEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWheelEvent.__N.To_QEvent_From_QWheelEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWheelEvent.__N.QWheel_pixelDelta = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWheelEvent.__N.QWheel_angleDelta = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWheelEvent.__N.QWheel_position = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWheelEvent.__N.QWheel_globalPosition = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWheelEvent.__N.QWheel_buttons = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWheelEvent.__N.QWheel_modifiers = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWheelEvent.__N.QWheel_timestamp = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWheelEvent.__N.QWheel_accept = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWheelEvent.__N.QWheel_ignore = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWheelEvent.__N.QWheel_isAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWheelEvent.__N.QWheel_spontaneous = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWheelEvent.__N.QWheel_setAccepted = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.From_QObject_To_QWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.To_QObject_From_QWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_CreateWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_isTopLevel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_isWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_isModal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setStyleSheet = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_windowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setWindowTitle = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setWindowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_windowFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_size = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_resize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_minimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setMinimumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_maximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setMaximumSize = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_pos = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_move = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_isEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setHidden = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_show = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_hide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_showMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_showMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_showFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_showNormal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_close = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_raise = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_lower = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_isVisible = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_testAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_acceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setAcceptDrops = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_update = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_repaint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_unsetCursor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setWindowIcon = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setWindowIconText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setWindowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_windowOpacity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_isMinimized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_isMaximized = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_isFullScreen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_hasMouseTracking = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_underMouse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_mapToGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_mapFromGlobal = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_hasFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_focusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setFocusPolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setFocusProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_isActiveWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_updatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setUpdatesEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_activateWindow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_clearFocus = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setSizePolicy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_devicePixelRatioF = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_saveGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_restoreGeometry = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_addAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_removeAction = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setParent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_parentWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_AddClassName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_Polish = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_toolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setToolTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_statusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setStatusTip = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_toolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setToolTipDuration = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_autoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setAutoFillBackground = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_deleteLater = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_objectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setObjectName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_setProperty = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				QWidget.__N.QWdget_f3 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ToolGlue.__N.ToolGl_ShowTool = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				WidgetUtil.__N.WdgetU_OnObject_Destroyed = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				WidgetUtil.__N.WdgetU_OnMenu_AboutToShow = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				WidgetUtil.__N.WdgetU_OnMenu_AboutToHide = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				WidgetUtil.__N.WdgetU_AddSearchPath = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				WidgetUtil.__N.WdgetU_RemoveSearchPath = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				WidgetUtil.__N.WdgetU_GetChildren = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				WidgetUtil.__N.WdgetU_CreateGraphicsScene = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				WidgetUtil.__N.WdgetU_CreateGraphicsView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				WidgetUtil.__N.WdgetU_CreateGraphicsProxy = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				WidgetUtil.__N.WdgetU_CreateMainWindowWidget = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				WidgetUtil.__N.WdgetU_PostKeyEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				WidgetUtil.__N.WdgetU_PaintSetFont = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				i = 0;
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_AbtDlg_Open);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalOnPressed);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalOnReleased);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalOnClicked);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalOnToggled);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalOnEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalMousePressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalMouseEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalMouseLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalMouseReleaseEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalMouseMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalMouseDoubleClickEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalWheelEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalContextMenuEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalKeyPressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalFocusInEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalFocusOutEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalOnResizeEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalOnMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalPaintEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalFocusNextPrevChild);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalDragEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalDragMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalDragLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Button_InternalDropEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalOnPressed);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalOnReleased);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalOnClicked);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalOnToggled);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalOnStateChanged);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalOnEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalMousePressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalMouseEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalMouseLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalMouseReleaseEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalMouseMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalMouseDoubleClickEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalWheelEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalContextMenuEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalKeyPressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalFocusInEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalFocusOutEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalOnResizeEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalOnMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalPaintEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalFocusNextPrevChild);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalDragEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalDragMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalDragLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_CheckB_InternalDropEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ComboB_InternalTextChanged);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ComboB_InternalIndexChanged);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ComboB_InternalOnEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ComboB_InternalMousePressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ComboB_InternalMouseEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ComboB_InternalMouseLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ComboB_InternalMouseReleaseEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ComboB_InternalMouseMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ComboB_InternalMouseDoubleClickEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ComboB_InternalWheelEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ComboB_InternalContextMenuEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ComboB_InternalKeyPressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ComboB_InternalFocusInEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ComboB_InternalFocusOutEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ComboB_InternalOnResizeEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ComboB_InternalOnMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ComboB_InternalPaintEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ComboB_InternalFocusNextPrevChild);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ComboB_InternalDragEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ComboB_InternalDragMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ComboB_InternalDragLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ComboB_InternalDropEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DtMdel_GetIndex);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DtMdel_GetNodeRows);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DtMdel_GetNodeColumns);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DtMdel_GetNodeParent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DtMdel_GetNodeFlags);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DtMdel_InternalPaintItem);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DtMdel_SizeHint);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DtMdel_ToolTipHint);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DtMdel_StatusTipHint);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DckWdg_InternalOnEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DckWdg_InternalMousePressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DckWdg_InternalMouseEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DckWdg_InternalMouseLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DckWdg_InternalMouseReleaseEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DckWdg_InternalMouseMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DckWdg_InternalMouseDoubleClickEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DckWdg_InternalWheelEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DckWdg_InternalContextMenuEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DckWdg_InternalKeyPressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DckWdg_InternalFocusInEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DckWdg_InternalFocusOutEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DckWdg_InternalOnResizeEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DckWdg_InternalOnMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DckWdg_InternalPaintEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DckWdg_InternalFocusNextPrevChild);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DckWdg_InternalDragEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DckWdg_InternalDragMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DckWdg_InternalDragLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_DckWdg_InternalDropEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_EventF_OnKeyPressed);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_EventF_OnEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Frame_InternalOnEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Frame_InternalMousePressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Frame_InternalMouseEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Frame_InternalMouseLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Frame_InternalMouseReleaseEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Frame_InternalMouseMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Frame_InternalMouseDoubleClickEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Frame_InternalWheelEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Frame_InternalContextMenuEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Frame_InternalKeyPressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Frame_InternalFocusInEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Frame_InternalFocusOutEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Frame_InternalOnResizeEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Frame_InternalOnMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Frame_InternalPaintEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Frame_InternalFocusNextPrevChild);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Frame_InternalDragEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Frame_InternalDragMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Frame_InternalDragLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Frame_InternalDropEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalPaint);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalGetSize);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalMousePressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalMouseReleaseEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalMouseMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalHoverEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalHoverMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalHoverLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalItemChange);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalOnEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_f2);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalMouseEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalMouseLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_f3);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_f4);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalMouseDoubleClickEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalWheelEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalContextMenuEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalKeyPressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalFocusInEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalFocusOutEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalOnResizeEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalOnMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalPaintEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalFocusNextPrevChild);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalDragEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalDragMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalDragLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_InternalDropEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Grphcs_Poop);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalTextChanged);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalTextEdited);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalReturnPressed);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalEditingFinished);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalOnEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalMousePressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalMouseEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalMouseLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalMouseReleaseEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalMouseMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalMouseDoubleClickEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalWheelEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalContextMenuEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalKeyPressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalFocusInEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalFocusOutEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalOnResizeEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalOnMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalPaintEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalFocusNextPrevChild);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalDragEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalDragMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalDragLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LneEdt_InternalDropEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalItemPressed);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalItemClicked);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalItemDoubleClicked);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalCurrentChanged);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalOnEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalMousePressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalMouseEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalMouseLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalMouseReleaseEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalMouseMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalMouseDoubleClickEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalWheelEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalContextMenuEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalKeyPressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalFocusInEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalFocusOutEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalOnResizeEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalOnMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalPaintEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalFocusNextPrevChild);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalDragEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalDragMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalDragLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_LstVew_InternalDropEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MngedT_InitStart);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MngedT_InitFinish);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MngedT_RunFrame);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MngedT_Shutdown);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MngedT_NativeHook);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MngedT_GlobalMousePressed);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MngedT_GlobalKeyPressed);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MngedT_OnToolCommand);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MenuBa_InternalOnEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MenuBa_InternalMousePressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MenuBa_InternalMouseEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MenuBa_InternalMouseLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MenuBa_InternalMouseReleaseEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MenuBa_InternalMouseMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MenuBa_InternalMouseDoubleClickEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MenuBa_InternalWheelEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MenuBa_InternalContextMenuEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MenuBa_InternalKeyPressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MenuBa_InternalFocusInEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MenuBa_InternalFocusOutEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MenuBa_InternalOnResizeEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MenuBa_InternalOnMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MenuBa_InternalPaintEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MenuBa_InternalFocusNextPrevChild);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MenuBa_InternalDragEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MenuBa_InternalDragMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MenuBa_InternalDragLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_MenuBa_InternalDropEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Option_InternalTriggered);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Option_InternalToggled);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_SttsBr_InternalOnEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_SttsBr_InternalMousePressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_SttsBr_InternalMouseEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_SttsBr_InternalMouseLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_SttsBr_InternalMouseReleaseEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_SttsBr_InternalMouseMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_SttsBr_InternalMouseDoubleClickEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_SttsBr_InternalWheelEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_SttsBr_InternalContextMenuEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_SttsBr_InternalKeyPressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_SttsBr_InternalFocusInEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_SttsBr_InternalFocusOutEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_SttsBr_InternalOnResizeEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_SttsBr_InternalOnMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_SttsBr_InternalPaintEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_SttsBr_InternalFocusNextPrevChild);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_SttsBr_InternalDragEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_SttsBr_InternalDragMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_SttsBr_InternalDragLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_SttsBr_InternalDropEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TextEd_InternalOnEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TextEd_InternalMousePressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TextEd_InternalMouseEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TextEd_InternalMouseLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TextEd_InternalMouseReleaseEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TextEd_InternalMouseMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TextEd_InternalMouseDoubleClickEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TextEd_InternalWheelEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TextEd_InternalContextMenuEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TextEd_InternalKeyPressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TextEd_InternalFocusInEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TextEd_InternalFocusOutEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TextEd_InternalOnResizeEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TextEd_InternalOnMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TextEd_InternalPaintEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TextEd_InternalFocusNextPrevChild);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TextEd_InternalDragEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TextEd_InternalDragMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TextEd_InternalDragLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TextEd_InternalDropEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ToolBa_InternalOnEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ToolBa_InternalMousePressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ToolBa_InternalMouseEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ToolBa_InternalMouseLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ToolBa_InternalMouseReleaseEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ToolBa_InternalMouseMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ToolBa_InternalMouseDoubleClickEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ToolBa_InternalWheelEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ToolBa_InternalContextMenuEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ToolBa_InternalKeyPressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ToolBa_InternalFocusInEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ToolBa_InternalFocusOutEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ToolBa_InternalOnResizeEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ToolBa_InternalOnMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ToolBa_InternalPaintEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ToolBa_InternalFocusNextPrevChild);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ToolBa_InternalDragEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ToolBa_InternalDragMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ToolBa_InternalDragLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_ToolBa_InternalDropEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TryIcn_InternalActivated);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TryIcn_InternalMessageClicked);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalItemPressed);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalItemClicked);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalItemDoubleClicked);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalItemExpanded);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalItemCollapsed);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalCurrentChanged);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalOnEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalMousePressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalMouseEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalMouseLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalMouseReleaseEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalMouseMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalMouseDoubleClickEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalWheelEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalContextMenuEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalKeyPressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalFocusInEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalFocusOutEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalOnResizeEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalOnMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalPaintEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalFocusNextPrevChild);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalDragEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalDragMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalDragLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_TreeVe_InternalDropEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Widget_InternalOnEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Widget_InternalMousePressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Widget_InternalMouseEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Widget_InternalMouseLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Widget_InternalMouseReleaseEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Widget_InternalMouseMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Widget_InternalMouseDoubleClickEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Widget_InternalWheelEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Widget_InternalContextMenuEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Widget_InternalKeyPressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Widget_InternalFocusInEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Widget_InternalFocusOutEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Widget_InternalOnResizeEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Widget_InternalOnMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Widget_InternalPaintEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Widget_InternalFocusNextPrevChild);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Widget_InternalDragEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Widget_InternalDragMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Widget_InternalDragLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Widget_InternalDropEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Window_InternalCloseEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Window_InitFramelessWindow);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Window_InternalOnEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Window_InternalMousePressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Window_InternalMouseEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Window_InternalMouseLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Window_InternalMouseReleaseEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Window_InternalMouseMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Window_InternalMouseDoubleClickEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Window_InternalWheelEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Window_InternalContextMenuEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Window_InternalKeyPressEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Window_InternalFocusInEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Window_InternalFocusOutEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Window_InternalOnResizeEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Window_InternalOnMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Window_InternalPaintEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Window_InternalFocusNextPrevChild);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Window_InternalDragEnterEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Window_InternalDragMoveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Window_InternalDragLeaveEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Tools_Window_InternalDropEvent);
			}
			catch (Exception ___e)
			{
				onError(___e.Message + "\n\n" + ___e.StackTrace);
			}
		}

		// Token: 0x0200012C RID: 300
		// (Invoke) Token: 0x060017D1 RID: 6097
		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		internal delegate void _ErrorFunction(string message);
	}
}
