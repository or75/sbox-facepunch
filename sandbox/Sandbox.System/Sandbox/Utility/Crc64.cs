using System;
using System.Buffers;
using System.Collections.Generic;
using System.IO;
using System.Text;
using System.Threading.Tasks;

namespace Sandbox.Utility
{
	// Token: 0x0200006B RID: 107
	public static class Crc64
	{
		// Token: 0x060004A7 RID: 1191 RVA: 0x00021544 File Offset: 0x0001F744
		public static ulong Compute(byte[] s)
		{
			ulong crc = ulong.MaxValue;
			for (int i = 0; i < s.Length; i++)
			{
				checked
				{
					crc = Crc64.Table[(int)((IntPtr)((crc ^ unchecked((ulong)s[i])) & 255UL))] ^ (crc >> 8);
				}
			}
			return crc ^ ulong.MaxValue;
		}

		// Token: 0x060004A8 RID: 1192 RVA: 0x00021580 File Offset: 0x0001F780
		public static ulong FromBytes(IEnumerable<byte> byteStream)
		{
			ulong crc = ulong.MaxValue;
			checked
			{
				foreach (byte b in byteStream)
				{
					crc = Crc64.Table[(int)((IntPtr)((crc ^ unchecked((ulong)b)) & 255UL))] ^ (crc >> 8);
				}
				return crc ^ ulong.MaxValue;
			}
		}

		// Token: 0x060004A9 RID: 1193 RVA: 0x000215E0 File Offset: 0x0001F7E0
		public static ulong FromString(string str)
		{
			return Crc64.FromBytes(Encoding.ASCII.GetBytes(str));
		}

		// Token: 0x060004AA RID: 1194 RVA: 0x000215F4 File Offset: 0x0001F7F4
		public static async Task<ulong> FromStreamAsync(Stream stream)
		{
			byte[] buffer = ArrayPool<byte>.Shared.Rent(262144);
			ulong crc = ulong.MaxValue;
			for (;;)
			{
				int read = await stream.ReadAsync(buffer, 0, buffer.Length);
				if (read == 0)
				{
					break;
				}
				for (int i = 0; i < read; i++)
				{
					checked
					{
						crc = Crc64.Table[(int)((IntPtr)((crc ^ unchecked((ulong)buffer[i])) & 255UL))] ^ (crc >> 8);
					}
				}
			}
			ArrayPool<byte>.Shared.Return(buffer, false);
			return crc ^ ulong.MaxValue;
		}

		// Token: 0x060004AB RID: 1195 RVA: 0x00021638 File Offset: 0x0001F838
		public static ulong FromStream(Stream stream)
		{
			byte[] buffer = ArrayPool<byte>.Shared.Rent(262144);
			ulong crc = ulong.MaxValue;
			for (;;)
			{
				int read = stream.Read(buffer, 0, buffer.Length);
				if (read == 0)
				{
					break;
				}
				for (int i = 0; i < read; i++)
				{
					checked
					{
						crc = Crc64.Table[(int)((IntPtr)((crc ^ unchecked((ulong)buffer[i])) & 255UL))] ^ (crc >> 8);
					}
				}
			}
			ArrayPool<byte>.Shared.Return(buffer, false);
			return crc ^ ulong.MaxValue;
		}

		// Token: 0x04000936 RID: 2358
		private static readonly ulong[] Table = new ulong[]
		{
			0UL, 8851949072701294969UL, 17703898145402589938UL, 10333669153493130123UL, 13851072938616403599UL, 13465927519055396854UL, 3857338458010461309UL, 5715195658523061508UL, 12333367839138578037UL, 15127763206205961996UL,
			6816212484437830791UL, 2612226237385041406UL, 7714676916020922618UL, 1281407202545942915UL, 11430391317046123016UL, 16463076249205199729UL, 9009731685717012353UL, 563108230357313272UL, 9851657908567506291UL, 17465080730062222346UL,
			13632424968875661582UL, 14404880506683019383UL, 5224452474770082812UL, 3627802401766982277UL, 15429353832041845236UL, 12463821128841762957UL, 2562814405091885830UL, 6433535930597116543UL, 1592294032496338811UL, 7836410910743637506UL,
			16404387395731993993UL, 11056451039949864176UL, 18019463371434024706UL, 9280105458721969787UL, 1126216460714626544UL, 8464919223366468745UL, 4190910634541279629UL, 4679640014836523252UL, 14959263154764675967UL, 13060872525739979270UL,
			5852729821509460343UL, 3161916214005835790UL, 11856275032257016709UL, 16019730051968187132UL, 10448904949540165624UL, 16994763621833383553UL, 7255604803533964554UL, 2191395843288271987UL, 9734813498046853251UL, 18285020776702097914UL,
			8262382231073956465UL, 608425843627928328UL, 5125628810183771660UL, 4465764294926438261UL, 12867071861194233086UL, 14432195567501024647UL, 3184588064992677622UL, 6262709589572306831UL, 15672821821487275012UL, 11770576130456212861UL,
			17008134862606432377UL, 10867599606483677440UL, 1853769023980628619UL, 7161174014982448114UL, 16103423924954344815UL, 11935289383220651030UL, 3083341959784644509UL, 5769757520242456292UL, 2252432921429253088UL, 7321251034957484697UL,
			16929838446732937490UL, 10388307452745547883UL, 8381821269082559258UL, 1047727658635319907UL, 9359280029673046504UL, 18102965619612993681UL, 13000435797616977301UL, 14894146905688698092UL, 4745161141923116903UL, 4252033715651608094UL,
			11705459643018920686UL, 15612384854998895511UL, 6323832428011671580UL, 3250108949404244325UL, 7082685524280996961UL, 1770671381070249240UL, 10951102161764411027UL, 17087309740654948330UL, 674072313427442843UL, 8323419547594995170UL,
			18224423522563763817UL, 9669888565606754064UL, 14511209607067929108UL, 12950765422787986285UL, 4382791686576543974UL, 5047054248884015519UL, 2696289253709771373UL, 6895947823530343188UL, 15049839570318909599UL, 12250835051042597350UL,
			16524764462147912930UL, 11496477575961038235UL, 1216851687255856656UL, 7654800921679748969UL, 10251257620367543320UL, 17625884659327141217UL, 8931528589852876522UL, 84259039178430355UL, 5655163293556783767UL, 3792978414742418414UL,
			13532134484260726885UL, 13912670750543257884UL, 6369176129985355244UL, 2502782282785952917UL, 12525419179144613662UL, 15495561035627234919UL, 10978437246791527267UL, 16321975555527844378UL, 7920669638525335953UL, 1671873238255513832UL,
			17531166746306175897UL, 9913345878835194592UL, 503231997654823275UL, 8945175932061546514UL, 3707538047961257238UL, 5308515798192249967UL, 14322348029964896228UL, 13554501644362141341UL, 10785157014839085493UL, 17254666630495879372UL,
			6925536469308201799UL, 1928669229005230654UL, 6166683919569289018UL, 3408106242218915395UL, 11539515040484912584UL, 15779741191858611377UL, 4504865842858506176UL, 4925828954283753145UL, 14642502069914969394UL, 12820884771576065099UL,
			18355716529793696079UL, 9540007361421969462UL, 796147016248169405UL, 8202193697865996996UL, 16763642538165118516UL, 10555343349626187597UL, 2095455317270639814UL, 7479631577382337983UL, 2926364910754730171UL, 5928137516128508354UL,
			15937228569359352393UL, 12102324735718361904UL, 4867406749023426625UL, 4131191115536978232UL, 13131477498808912563UL, 14763945261529023434UL, 9490322283846233806UL, 17972763431062038455UL, 8504067431303216188UL, 926884511990314309UL,
			8051711962477172407UL, 1541670979892322254UL, 11100683476643087429UL, 16201132341218348348UL, 12647664856023343160UL, 15374718365700663617UL, 6500217898808488650UL, 2372580570961558451UL, 14165371048561993922UL, 13712881572587659707UL,
			3541342762140498480UL, 5475551080882205513UL, 337036156713721421UL, 9112211761281881908UL, 17374189211922025663UL, 10071726351451997638UL, 1348144626854885686UL, 7524919785159454799UL, 16646839095189990340UL, 11375251796044276413UL,
			15171913658969673657UL, 12129609824107054784UL, 2827581646778391883UL, 6766067242130363442UL, 13374985906044110659UL, 14070668113165684282UL, 5489218623395763633UL, 3960334819262667976UL, 8765583373153087948UL, 251615998827411637UL,
			10094108497768031038UL, 17783882574922426951UL, 5392578507419542746UL, 3462768234654100899UL, 13791895647060686376UL, 14249064643987996497UL, 10011129131143811669UL, 17309264314385947436UL, 9177858264896848039UL, 398073508124084702UL,
			16284634862666717871UL, 11179858319785628630UL, 1463182455377365085UL, 7968614284679676196UL, 2433703374511713312UL, 6565738749404456281UL, 15309601843359497938UL, 12587227855704700843UL, 4025855981238586203UL, 5550341738321543714UL,
			14010231419946703273UL, 13309869690798280912UL, 17863057179705753044UL, 10177610780853122221UL, 168518078356860710UL, 8687094605961012831UL, 11310326587113567534UL, 16586241563491499095UL, 7585956829484836828UL, 1413790823389195941UL,
			6687492953022055329UL, 2744609311697881816UL, 12213303662187237715UL, 15250927976100943914UL, 12738352259970710488UL, 14564578711588090529UL, 5005564565571905834UL, 4588929132448424019UL, 8142317431333358935UL, 731591227688682542UL,
			9606093343850471333UL, 18417404465172059868UL, 2012927990619293101UL, 7005115709973351636UL, 17176652871151048543UL, 10702745209522052646UL, 15841339277050671906UL, 11605722277885901403UL, 3343746476511027664UL, 6106651831093618857UL,
			14830152191845028953UL, 13193075276920315168UL, 4071158715666679467UL, 4803046671925235666UL, 1006463995309646550UL, 8588326435575524271UL, 17890351864123093028UL, 9412308762883553629UL, 7415076095922514476UL, 2035579357833339733UL,
			10617031596384499934UL, 16829728831969243559UL, 12024401134718426275UL, 15854695815076877786UL, 6012200567359213137UL, 3006100283679606568UL
		};
	}
}
