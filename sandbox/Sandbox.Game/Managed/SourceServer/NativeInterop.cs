using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using NativeEngine;
using NativeGlue;
using Sandbox.Joints;

namespace Managed.SourceServer
{
	// Token: 0x0200000F RID: 15
	internal static class NativeInterop
	{
		// Token: 0x060000B3 RID: 179 RVA: 0x00005098 File Offset: 0x00003298
		private unsafe static void CheckStructSizes(int* struct_sizes)
		{
			string errors = "";
			int i = 0;
			if (234 != struct_sizes[i++])
			{
				errors += "Struct size header not found\n";
			}
			if (sizeof(BBox) != struct_sizes[i++])
			{
				string str = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(12, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(BBox));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tBBox \n");
				errors = str + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str2 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(30, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.BoneFlags \n");
				errors = str2 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str3 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(31, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.ButtonCode \n");
				errors = str3 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(CBaseHandle) != struct_sizes[i++])
			{
				string str4 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(32, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(CBaseHandle));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.CBaseHandle \n");
				errors = str4 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(Color32) != struct_sizes[i++])
			{
				string str5 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(15, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(Color32));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tColor32 \n");
				errors = str5 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(Color24) != struct_sizes[i++])
			{
				string str6 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(15, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(Color24));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tColor24 \n");
				errors = str6 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str7 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(32, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.ColorFormat \n");
				errors = str7 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(ConicalJointBuilder) != struct_sizes[i++])
			{
				string str8 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(42, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(ConicalJointBuilder));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tSandbox.Joints.ConicalJointBuilder \n");
				errors = str8 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(Transform) != struct_sizes[i++])
			{
				string str9 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(17, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(Transform));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tTransform \n");
				errors = str9 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(CUserCmd) != struct_sizes[i++])
			{
				string str10 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(29, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(CUserCmd));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.CUserCmd \n");
				errors = str10 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str11 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(30, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tSandbox.SceneLayerType \n");
				errors = str11 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (8 != struct_sizes[i++])
			{
				string str12 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(32, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(8);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.ELayerFlags \n");
				errors = str12 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str13 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(44, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.NetworkStringtableFlags \n");
				errors = str13 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str14 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(39, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.EntityIOTargetType \n");
				errors = str14 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (8 != struct_sizes[i++])
			{
				string str15 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(38, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(8);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.ESceneObjectFlags \n");
				errors = str15 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str16 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(42, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.ESceneObjectTypeFlags \n");
				errors = str16 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(GenericJointBuilder) != struct_sizes[i++])
			{
				string str17 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(42, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(GenericJointBuilder));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tSandbox.Joints.GenericJointBuilder \n");
				errors = str17 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str18 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(27, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tSandbox.ImageFormat \n");
				errors = str18 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str19 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(39, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.InputCommandSource \n");
				errors = str19 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str20 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(27, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tSandbox.JointMotion \n");
				errors = str20 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str21 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(25, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tSandbox.LifeState \n");
				errors = str21 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(LightDesc) != struct_sizes[i++])
			{
				string str22 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(30, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(LightDesc));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.LightDesc \n");
				errors = str22 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (1 != struct_sizes[i++])
			{
				string str23 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(32, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(1);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.MoveCollide \n");
				errors = str23 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (1 != struct_sizes[i++])
			{
				string str24 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(24, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(1);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tSandbox.MoveType \n");
				errors = str24 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(OverlapResult) != struct_sizes[i++])
			{
				string str25 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(34, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(OverlapResult));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.OverlapResult \n");
				errors = str25 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str26 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(34, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tSandbox.ParticleAttachment \n");
				errors = str26 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str27 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(31, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tSandbox.PhysicsBodyType \n");
				errors = str27 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str28 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(37, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tSandbox.PhysicsJointMotorMode \n");
				errors = str28 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str29 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(32, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tSandbox.PhysicsJointType \n");
				errors = str29 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str30 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(32, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tSandbox.PhysicsShapeType \n");
				errors = str30 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(PrismaticJointBuilder) != struct_sizes[i++])
			{
				string str31 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(44, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(PrismaticJointBuilder));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tSandbox.Joints.PrismaticJointBuilder \n");
				errors = str31 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(Angles) != struct_sizes[i++])
			{
				string str32 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(14, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(Angles));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tAngles \n");
				errors = str32 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(Rotation) != struct_sizes[i++])
			{
				string str33 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(16, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(Rotation));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tRotation \n");
				errors = str33 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(NativeRect) != struct_sizes[i++])
			{
				string str34 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(18, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(NativeRect));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeRect \n");
				errors = str34 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(Rect3D) != struct_sizes[i++])
			{
				string str35 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(14, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(Rect3D));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tRect3D \n");
				errors = str35 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str36 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(42, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.RenderMultisampleType \n");
				errors = str36 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str37 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(50, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.RenderSystemAssetFileLoadMode \n");
				errors = str37 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(RenderTargetDesc) != struct_sizes[i++])
			{
				string str38 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(37, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(RenderTargetDesc));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.RenderTargetDesc \n");
				errors = str38 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(RenderViewport) != struct_sizes[i++])
			{
				string str39 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(35, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(RenderViewport));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.RenderViewport \n");
				errors = str39 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(TraceRequest) != struct_sizes[i++])
			{
				string str40 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(33, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(TraceRequest));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.TraceRequest \n");
				errors = str40 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(TraceResult) != struct_sizes[i++])
			{
				string str41 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(32, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(TraceResult));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.TraceResult \n");
				errors = str41 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(RevoluteJointBuilder) != struct_sizes[i++])
			{
				string str42 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(43, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(RevoluteJointBuilder));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tSandbox.Joints.RevoluteJointBuilder \n");
				errors = str42 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(Capsule) != struct_sizes[i++])
			{
				string str43 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(15, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(Capsule));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tCapsule \n");
				errors = str43 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str44 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(48, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.SceneSystemRenderTargetSize \n");
				errors = str44 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str45 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(57, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.SceneSystemWellKnownMaterialObjectID \n");
				errors = str45 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str46 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(55, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.SceneSystemWellKnownRenderTargetID \n");
				errors = str46 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str47 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(56, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.SceneSystemWellKnownTextureObjectID \n");
				errors = str47 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (1 != struct_sizes[i++])
			{
				string str48 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(25, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(1);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tSandbox.SolidType \n");
				errors = str48 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(SphericalJointBuilder) != struct_sizes[i++])
			{
				string str49 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(44, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(SphericalJointBuilder));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tSandbox.Joints.SphericalJointBuilder \n");
				errors = str49 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(SpringJointBuilder) != struct_sizes[i++])
			{
				string str50 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(41, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(SpringJointBuilder));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tSandbox.Joints.SpringJointBuilder \n");
				errors = str50 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (1 != struct_sizes[i++])
			{
				string str51 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(37, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(1);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tSandbox.SurroundingBoundsType \n");
				errors = str51 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str52 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(36, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.SwapChainBuffer \n");
				errors = str52 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str53 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(41, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.TextureDecodingFlags \n");
				errors = str53 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str54 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(49, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.TextureOnDiskCompressionType \n");
				errors = str54 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str55 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(33, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.TextureScope \n");
				errors = str55 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str56 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(46, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.TextureSpecificationFlags \n");
				errors = str56 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str57 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(33, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.TextureUsage \n");
				errors = str57 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(Vector3) != struct_sizes[i++])
			{
				string str58 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(15, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(Vector3));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tVector3 \n");
				errors = str58 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(Vector2) != struct_sizes[i++])
			{
				string str59 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(15, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(Vector2));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tVector2 \n");
				errors = str59 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(Vector4) != struct_sizes[i++])
			{
				string str60 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(15, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(Vector4));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tVector4 \n");
				errors = str60 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(ViewDesc) != struct_sizes[i++])
			{
				string str61 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(29, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(ViewDesc));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tNativeEngine.ViewDesc \n");
				errors = str61 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(Matrix) != struct_sizes[i++])
			{
				string str62 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(14, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(Matrix));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tMatrix \n");
				errors = str62 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (4 != struct_sizes[i++])
			{
				string str63 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(33, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(4);
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tSandbox.PhysicsMotionType \n");
				errors = str63 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (sizeof(WeldJointBuilder) != struct_sizes[i++])
			{
				string str64 = errors;
				DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(39, 2);
				defaultInterpolatedStringHandler.AppendLiteral("M:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(sizeof(WeldJointBuilder));
				defaultInterpolatedStringHandler.AppendLiteral("\tN:");
				defaultInterpolatedStringHandler.AppendFormatted<int>(struct_sizes[i - 1]);
				defaultInterpolatedStringHandler.AppendLiteral("\tSandbox.Joints.WeldJointBuilder \n");
				errors = str64 + defaultInterpolatedStringHandler.ToStringAndClear();
			}
			if (64 != struct_sizes[i++])
			{
				errors += "Struct size footer not found\n";
			}
			if (!string.IsNullOrEmpty(errors))
			{
				throw new Exception("Data structure size doesn't match:\n\n" + errors.Trim());
			}
		}

		// Token: 0x060000B4 RID: 180 RVA: 0x00006AA8 File Offset: 0x00004CA8
		internal unsafe static void Initialize(int hash, IntPtr* exported, int* struct_sizes, IntPtr* imported)
		{
			int i = 0;
			NativeInterop._ErrorFunction onError = Marshal.GetDelegateForFunctionPointer<NativeInterop._ErrorFunction>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
			try
			{
				if (hash != 41580)
				{
					DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(32, 1);
					defaultInterpolatedStringHandler.AppendLiteral("Hash doesn't match ( ");
					defaultInterpolatedStringHandler.AppendFormatted<int>(hash);
					defaultInterpolatedStringHandler.AppendLiteral(" != 41580 )");
					throw new Exception(defaultInterpolatedStringHandler.ToStringAndClear());
				}
				NativeInterop.CheckStructSizes(struct_sizes);
				CBaseAnimating.__N.From_CBaseModelEntity_To_CBaseAnimating = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.To_CBaseModelEntity_From_CBaseAnimating = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.From_CBaseEntity_To_CBaseAnimating = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.To_CBaseEntity_From_CBaseAnimating = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.From_CGameEntity_To_CBaseAnimating = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.To_CGameEntity_From_CBaseAnimating = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.From_CEntityInstance_To_CBaseAnimating = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.To_CEntityInstance_From_CBaseAnimating = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.From_IHandleEntity_To_CBaseAnimating = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.To_IHandleEntity_From_CBaseAnimating = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetPlaybackRate = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_SetPlaybackRate = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetCycle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_SetCycle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_Script_SetSequence = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_Script_ResetSequence = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_Script_GetSequence = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_IsValidSequence = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_IsSequenceFinished = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_SequenceDuration = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_Script_SequenceDuration = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_SetShouldUseAnimGraph = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetShouldUseAnimGraph = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_SetOverrideGraphName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetOverrideGraphName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_UseAnimGraph = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_HasAnimGraph = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetBoolGraphParameter = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetFloatGraphParameter = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetVectorGraphParameter = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetIntGraphParameter = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_SetGraphParameter = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_f2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_f3 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_f4 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_f5 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_SetGraphParameterFromString = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_SetMasterBlendAmountEasing = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetMasterBlendAmountEasing = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_IsAnimGraphUpdateEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_SetAnimGraphUpdateEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_ResetGraphParameters = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_EnableIK = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetRootMotion = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetRootMotionAngle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetSkeletonInstance = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_SetModelScale = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetModelScale = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetNumBones = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_LookupBone = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetAttachmentCount = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetMinFadeDist = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetMaxFadeDist = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_SetModel = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetModel = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_f6 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_SetModelAsync = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_SetBodygroup = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_SetBodygroupByName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetRawMeshGroupMask = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_SetRawMeshGroupMask_LegacyDoNotUse = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetSkinCount = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_SetSkin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_f7 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetS1Skin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_CollisionProp = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_SetRenderAlpha = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetRenderAlpha = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_SetRenderColor = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_SetRenderColorAndAlpha = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetRenderColor = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GlowProp = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseAnimating.__N.CBseAn_GetBoneTransform = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.From_CGameEntity_To_CBaseEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.To_CGameEntity_From_CBaseEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.From_CEntityInstance_To_CBaseEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.To_CEntityInstance_From_CBaseEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.From_IHandleEntity_To_CBaseEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.To_IHandleEntity_From_CBaseEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetDataTable = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetEntityHandle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SetLocalOrigin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetLocalOrigin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SetAbsOrigin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SetAbsAngles = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetClassname = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetAbsOrigin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetAbsAngles = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_EnableLagCompensation = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_IsLagCompensationEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetLocalQuat = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SetLocalQuat = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetAbsQuat = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SetAbsQuat = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetAbsScale = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SetAbsScale = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetLocalScale = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SetLocalScale = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_entindex = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SetAbsVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetAbsVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_AddFlag = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_RemoveFlag = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_ToggleFlag = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_ClearFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SetLifeState = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetLifeState = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetEffects = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_AddEffects = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_RemoveEffects = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_ClearEffects = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SetEffects = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_IsEffectActive = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_CreateVPhysics = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_ApplyAbsVelocityImpulse = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_ApplyLocalVelocityImpulse = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_ApplyLocalAngularVelocityImpulse = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SetMoveType = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetMoveType = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_PhysicsEnableMotion = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_FollowEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_StopFollowingEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_IsFollowingEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetFollowedEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_VPhysicsGetAggregate = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetBaseVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SetBaseVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SetGroundEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetGroundEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetModelNameString = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SetParent = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_f2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetParent = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_IncrementInterpolationFrame = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_DispatchUpdateTransmitState = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SetActiveChild = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetActiveChild = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SetOwnerEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetOwnerEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SetSimulationTime = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_HasSpawnFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetSpawnFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_AddSpawnFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_RemoveSpawnFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_ClearSpawnFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetLightComponent = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SetMoveDoneTime = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetMoveDoneTime = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SetLocalVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetLocalVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SetLocalAngularVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetLocalAngularVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SetDebugBits = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_HasDebugBitsSet = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_ClearDebugBits = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_ToggleDebugBits = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetDebugBits = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SetWaterEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_GetWaterEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_WorldSpaceAABB = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_RemoveAllDecals = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SB_GetEntityName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SB_SetEntityName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_SetData = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_ClearData = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_IsServerOnly = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_IsClientOnly = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.CBseEn_IsClientServerNetworked = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseEntity.__N.Get__CBseEn_m_ManagedClassIdent = Marshal.GetDelegateForFunctionPointer<CBaseEntity.__N._Get__CBseEn_m_ManagedClassIdent>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				CBaseEntity.__N.Set__CBseEn_m_ManagedClassIdent = Marshal.GetDelegateForFunctionPointer<CBaseEntity.__N._Set__CBseEn_m_ManagedClassIdent>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				CBaseEntity.__N.Get__CBseEn_EntityObject = Marshal.GetDelegateForFunctionPointer<CBaseEntity.__N._Get__CBseEn_EntityObject>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				CBaseEntity.__N.Set__CBseEn_EntityObject = Marshal.GetDelegateForFunctionPointer<CBaseEntity.__N._Set__CBseEn_EntityObject>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				CBaseEntity.__N.Get__CBseEn_m_iTransmitMode = Marshal.GetDelegateForFunctionPointer<CBaseEntity.__N._Get__CBseEn_m_iTransmitMode>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				CBaseEntity.__N.Set__CBseEn_m_iTransmitMode = Marshal.GetDelegateForFunctionPointer<CBaseEntity.__N._Set__CBseEn_m_iTransmitMode>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				CBaseEntity.__N.Get__CBseEn_m_EyePosOffset = Marshal.GetDelegateForFunctionPointer<CBaseEntity.__N._Get__CBseEn_m_EyePosOffset>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				CBaseEntity.__N.Set__CBseEn_m_EyePosOffset = Marshal.GetDelegateForFunctionPointer<CBaseEntity.__N._Set__CBseEn_m_EyePosOffset>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				CBaseEntity.__N.Get__CBseEn_m_EyeRotOffset = Marshal.GetDelegateForFunctionPointer<CBaseEntity.__N._Get__CBseEn_m_EyeRotOffset>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				CBaseEntity.__N.Set__CBseEn_m_EyeRotOffset = Marshal.GetDelegateForFunctionPointer<CBaseEntity.__N._Set__CBseEn_m_EyeRotOffset>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				CBaseEntity.__N.Get__CBseEn_m_WaterLevel = Marshal.GetDelegateForFunctionPointer<CBaseEntity.__N._Get__CBseEn_m_WaterLevel>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				CBaseEntity.__N.Set__CBseEn_m_WaterLevel = Marshal.GetDelegateForFunctionPointer<CBaseEntity.__N._Set__CBseEn_m_WaterLevel>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				CBaseEntity.__N.Get__CBseEn_m_fHealth = Marshal.GetDelegateForFunctionPointer<CBaseEntity.__N._Get__CBseEn_m_fHealth>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				CBaseEntity.__N.Set__CBseEn_m_fHealth = Marshal.GetDelegateForFunctionPointer<CBaseEntity.__N._Set__CBseEn_m_fHealth>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				CBaseEntity.__N.Get__CBseEn_m_netHash = Marshal.GetDelegateForFunctionPointer<CBaseEntity.__N._Get__CBseEn_m_netHash>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				CBaseEntity.__N.Set__CBseEn_m_netHash = Marshal.GetDelegateForFunctionPointer<CBaseEntity.__N._Set__CBseEn_m_netHash>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				CBaseModelEntity.__N.From_CBaseEntity_To_CBaseModelEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.To_CBaseEntity_From_CBaseModelEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.From_CGameEntity_To_CBaseModelEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.To_CGameEntity_From_CBaseModelEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.From_CEntityInstance_To_CBaseModelEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.To_CEntityInstance_From_CBaseModelEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.From_IHandleEntity_To_CBaseModelEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.To_IHandleEntity_From_CBaseModelEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetSkeletonInstance = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetModelScale = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetModelScale = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetNumBones = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_LookupBone = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetAttachmentCount = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetMinFadeDist = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetMaxFadeDist = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetModel = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetModel = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_f2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetModelAsync = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetBodygroup = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetBodygroupByName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetRawMeshGroupMask = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetRawMeshGroupMask_LegacyDoNotUse = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetSkinCount = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetSkin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_f3 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetS1Skin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_CollisionProp = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetRenderAlpha = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetRenderAlpha = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetRenderColor = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetRenderColorAndAlpha = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetRenderColor = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GlowProp = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetBoneTransform = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetDataTable = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetEntityHandle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetLocalOrigin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetLocalOrigin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetAbsOrigin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetAbsAngles = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetClassname = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetAbsOrigin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetAbsAngles = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_EnableLagCompensation = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_IsLagCompensationEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetLocalQuat = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetLocalQuat = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetAbsQuat = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetAbsQuat = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetAbsScale = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetAbsScale = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetLocalScale = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetLocalScale = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_entindex = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetAbsVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetAbsVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_AddFlag = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_RemoveFlag = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_ToggleFlag = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_ClearFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetLifeState = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetLifeState = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetEffects = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_AddEffects = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_RemoveEffects = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_ClearEffects = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetEffects = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_IsEffectActive = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_CreateVPhysics = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_ApplyAbsVelocityImpulse = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_ApplyLocalVelocityImpulse = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_ApplyLocalAngularVelocityImpulse = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetMoveType = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetMoveType = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_PhysicsEnableMotion = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_FollowEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_StopFollowingEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_IsFollowingEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetFollowedEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_VPhysicsGetAggregate = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetBaseVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetBaseVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetGroundEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetGroundEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetModelNameString = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetParent = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_f4 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetParent = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_IncrementInterpolationFrame = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_DispatchUpdateTransmitState = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetActiveChild = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetActiveChild = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetOwnerEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetOwnerEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetSimulationTime = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_HasSpawnFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetSpawnFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_AddSpawnFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_RemoveSpawnFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_ClearSpawnFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetLightComponent = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetMoveDoneTime = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetMoveDoneTime = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetLocalVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetLocalVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetLocalAngularVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetLocalAngularVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetDebugBits = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_HasDebugBitsSet = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_ClearDebugBits = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_ToggleDebugBits = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetDebugBits = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetWaterEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_GetWaterEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_WorldSpaceAABB = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_RemoveAllDecals = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SB_GetEntityName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SB_SetEntityName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_SetData = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_ClearData = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_IsServerOnly = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_IsClientOnly = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBaseModelEntity.__N.CBseMd_IsClientServerNetworked = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.From_CBaseModelEntity_To_CBasePlayer = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.To_CBaseModelEntity_From_CBasePlayer = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.From_CBaseEntity_To_CBasePlayer = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.To_CBaseEntity_From_CBasePlayer = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.From_CGameEntity_To_CBasePlayer = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.To_CGameEntity_From_CBasePlayer = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.From_CEntityInstance_To_CBasePlayer = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.To_CEntityInstance_From_CBasePlayer = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.From_IHandleEntity_To_CBasePlayer = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.To_IHandleEntity_From_CBasePlayer = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetPlayerName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetUserID = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetPlayerName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_ClientCommand = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_UpdateButtonState = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetSteamIDAsUInt64 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_PlayerRunCommand = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetLastUserCommand = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetLastUserCommand = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_PreBotTick = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_PostBotTick = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_StartLagCompensation = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_FinishLagCompensation = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_IsVrUser = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetSkeletonInstance = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetModelScale = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetModelScale = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetNumBones = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_LookupBone = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetAttachmentCount = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetMinFadeDist = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetMaxFadeDist = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetModel = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetModel = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_f2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetModelAsync = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetBodygroup = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetBodygroupByName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetRawMeshGroupMask = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetRawMeshGroupMask_LegacyDoNotUse = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetSkinCount = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetSkin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_f3 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetS1Skin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_CollisionProp = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetRenderAlpha = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetRenderAlpha = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetRenderColor = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetRenderColorAndAlpha = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetRenderColor = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GlowProp = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetBoneTransform = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetDataTable = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetEntityHandle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetLocalOrigin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetLocalOrigin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetAbsOrigin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetAbsAngles = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetClassname = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetAbsOrigin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetAbsAngles = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_EnableLagCompensation = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_IsLagCompensationEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetLocalQuat = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetLocalQuat = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetAbsQuat = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetAbsQuat = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetAbsScale = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetAbsScale = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetLocalScale = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetLocalScale = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_entindex = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetAbsVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetAbsVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_AddFlag = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_RemoveFlag = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_ToggleFlag = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_ClearFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetLifeState = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetLifeState = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetEffects = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_AddEffects = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_RemoveEffects = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_ClearEffects = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetEffects = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_IsEffectActive = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_CreateVPhysics = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_ApplyAbsVelocityImpulse = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_ApplyLocalVelocityImpulse = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_ApplyLocalAngularVelocityImpulse = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetMoveType = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetMoveType = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_PhysicsEnableMotion = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_FollowEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_StopFollowingEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_IsFollowingEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetFollowedEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_VPhysicsGetAggregate = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetBaseVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetBaseVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetGroundEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetGroundEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetModelNameString = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetParent = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_f4 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetParent = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_IncrementInterpolationFrame = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_DispatchUpdateTransmitState = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetActiveChild = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetActiveChild = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetOwnerEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetOwnerEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetSimulationTime = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_HasSpawnFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetSpawnFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_AddSpawnFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_RemoveSpawnFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_ClearSpawnFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetLightComponent = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetMoveDoneTime = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetMoveDoneTime = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetLocalVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetLocalVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetLocalAngularVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetLocalAngularVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetDebugBits = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_HasDebugBitsSet = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_ClearDebugBits = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_ToggleDebugBits = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetDebugBits = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetWaterEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_GetWaterEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_WorldSpaceAABB = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_RemoveAllDecals = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SB_GetEntityName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SB_SetEntityName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_SetData = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_ClearData = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_IsServerOnly = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_IsClientOnly = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.CBsePl_IsClientServerNetworked = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CBasePlayer.__N.Get__CBsePl_m_Pawn = Marshal.GetDelegateForFunctionPointer<CBasePlayer.__N._Get__CBsePl_m_Pawn>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				CBasePlayer.__N.Set__CBsePl_m_Pawn = Marshal.GetDelegateForFunctionPointer<CBasePlayer.__N._Set__CBsePl_m_Pawn>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				CBasePlayer.__N.Get__CBsePl_m_Ping = Marshal.GetDelegateForFunctionPointer<CBasePlayer.__N._Get__CBsePl_m_Ping>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				CBasePlayer.__N.Set__CBsePl_m_Ping = Marshal.GetDelegateForFunctionPointer<CBasePlayer.__N._Set__CBsePl_m_Ping>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				CBasePlayer.__N.Get__CBsePl_m_PacketLoss = Marshal.GetDelegateForFunctionPointer<CBasePlayer.__N._Get__CBsePl_m_PacketLoss>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				CBasePlayer.__N.Set__CBsePl_m_PacketLoss = Marshal.GetDelegateForFunctionPointer<CBasePlayer.__N._Set__CBsePl_m_PacketLoss>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				CollisionProperty.__N.CCllsn_OBBMins = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_OBBMaxs = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_GetCollisionOrigin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_GetCollisionAngles = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_GetCollisionScale = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_GetSolid = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_GetSolidFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_GetCollisionGroup = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_GetVPhysicsBody = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_SetCollisionGroup = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_MarkPartitionHandleDirty = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_SetCollisionBounds = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_GetCollisionBounds = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_UseTriggerBounds = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_SetSolid = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_OBBSize = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_OBBCenter = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_WorldSpaceCenter = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_BoundingRadius = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_BoundingRadius2D = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_ClearSolidFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_RemoveSolidFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_AddSolidFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_IsSolidFlagSet = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_SetSolidFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_IsSolid = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_IsCollisionEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_SetTriggerCollisionGroup = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_RemoveTriggerCollisionGroup = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_IsTriggerCollisionGroup = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_ForceTouchTriggers = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_IsBoundsDefinedInEntitySpace = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_EnableAllCollisions = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_DisableAllCollisions = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_EnableSolidCollisions = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_DisableSolidCollisions = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_IsSolidContactEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_EnableTouchEvents = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_DisableTouchEvents = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_EnableTraceAndQueries = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_DisableTraceAndQueries = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_EnableSelfCollisions = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_DisableSelfCollisions = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_EnableTouchPersistsNotification = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_DisableTouchPersistsNotification = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_EnableHitboxes = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_DisableHitboxes = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_IsHitboxEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_EnableAutoSleeping = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_DisableAutoSleeping = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_SetupPhysicsFromUnscaledCapsule = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_SetupPhysicsFromUnscaledOrientedCapsule = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_SetupPhysicsFromUnscaledModel = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_SetupPhysicsFromUnscaledAABB = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_SetupPhysicsFromUnscaledOBB = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_SetupPhysicsFromUnscaledSphere = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_EnableInteractsAsMask = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_EnableInteractsWithMask = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_EnableInteractsExcludeMask = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_GetInteractsAsMask = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_GetInteractsWithMask = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_GetInteractsExcludeMask = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_DisableInteractsAsMask = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_DisableInteractsWithMask = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_DisableInteractsExcludeMask = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_ClearInteractsAsMask = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_ClearInteractsWithMask = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_ClearInteractsExcludeMask = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_SetSurroundingBoundsType = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_GetSurroundingBoundsType = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CollisionProperty.__N.CCllsn_MarkSurroundingBoundsDirty = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.From_IHandleEntity_To_CEntityInstance = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.To_IHandleEntity_From_CEntityInstance = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.CEntty_OnSave = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.CEntty_OnRestore = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.CEntty_ObjectCaps = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.CEntty_NetworkStateChanged = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.CEntty_NetworkStateChangedLog = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.CEntty_IsCapableOfNetworking = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.CEntty_IsNetworked = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.CEntty_IsAuthoritative = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.CEntty_IsDormant = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.CEntty_IsMarkedForDeletion = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.CEntty_IsSpawnInProgress = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.CEntty_IsConstructionInProgress = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.CEntty_IsDeletionInProgress = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.CEntty_IsPreSpawn = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.CEntty_IsInEntityDatabase = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.CEntty_SetEntityName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.CEntty_GetEntityNameAsCStr = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.CEntty_NameMatches = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.CEntty_GetDebugName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.CEntty_GetClassNameAsCStr = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.CEntty_f2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.CEntty_GetSizeOf = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CEntityInstance.__N.CEntty_GetRefEHandle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.From_CEntityInstance_To_CGameEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.To_CEntityInstance_From_CGameEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.From_IHandleEntity_To_CGameEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.To_IHandleEntity_From_CGameEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_IsServerOnly = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_IsClientOnly = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_IsClientServerNetworked = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_OnSave = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_OnRestore = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_ObjectCaps = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_NetworkStateChanged = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_NetworkStateChangedLog = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_IsCapableOfNetworking = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_IsNetworked = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_IsAuthoritative = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_IsDormant = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_IsMarkedForDeletion = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_IsSpawnInProgress = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_IsConstructionInProgress = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_IsDeletionInProgress = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_IsPreSpawn = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_IsInEntityDatabase = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_SetEntityName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_GetEntityNameAsCStr = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_NameMatches = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_GetDebugName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_GetClassNameAsCStr = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_ClassMatches = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_GetSizeOf = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameEntity.__N.CGmeEn_GetRefEHandle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGameSceneNode.__N.CGmeSc_GetLocalOrigin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGlowProperty.__N.CGlwPr_SetGlowState = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGlowProperty.__N.CGlwPr_SetGlowRange = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGlowProperty.__N.CGlwPr_SetGlowRangeMin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGlowProperty.__N.CGlwPr_SetGlowTeam = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGlowProperty.__N.CGlwPr_SetGlowColorOverride = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGlowProperty.__N.CGlwPr_GetGlowState = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGlowProperty.__N.CGlwPr_GetGlowRange = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGlowProperty.__N.CGlwPr_GetGlowRangeMin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGlowProperty.__N.CGlwPr_GetGlowTeam = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGlowProperty.__N.CGlwPr_GetGlowColorOverride = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGlowProperty.__N.CGlwPr_StartGlowing = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGlowProperty.__N.CGlwPr_StopGlowing = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGlowProperty.__N.CGlwPr_MarkOwnerDirty = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGlowProperty.__N.CGlwPr_IsGlowing = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGlowProperty.__N.CGlwPr_SetFlashing = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGlowProperty.__N.CGlwPr_IsFlashing = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGlowProperty.__N.CGlwPr_GetGlowMaterialOverride = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CGlowProperty.__N.CGlwPr_SetGlowMaterialOverride = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_IsEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetColor = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_GetColor = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetBrightness = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_GetBrightness = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetBrightnessMultiplier = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_GetBrightnessMultiplier = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetFlicker = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_GetFlicker = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetRange = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_GetRange = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetInnerConeAngle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_GetInnerConeAngle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetOuterConeAngle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_GetOuterConeAngle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetFalloff = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_GetFalloff = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetAttenuation0 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_GetAttenuation0 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetAttenuation1 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_GetAttenuation1 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetAttenuation2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_GetAttenuation2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetFogLightingMode = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_GetFogLightingMode = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetFadeMinDistance = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_GetFadeMinDistance = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetFadeMaxDistance = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_GetFadeMaxDistance = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetShadowFadeMinDistance = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_GetShadowFadeMinDistance = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetShadowFadeMaxDistance = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_GetShadowFadeMaxDistance = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetFogContributionStength = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_GetFogContributionStength = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetDynamicShadows = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_DynamicShadows = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetOrthoLightWidth = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_GetOrthoLightWidth = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetOrthoLightHeight = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_GetOrthoLightHeight = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetSkyColor = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_GetSkyColor = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetSkyIntensity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_GetSkyIntensity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_SetLightCookie = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CLightComponent.__N.CLghtC_GetLightCookie = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.From_CSceneObject_To_CManagedSceneObject = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.To_CSceneObject_From_CManagedSceneObject = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_Create = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_ChangeFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_SetFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_HasFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_GetFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_GetOriginalFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_ClearFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_SetCullDistance = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_SetLightingOrigin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_GetLightingOrigin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_HasLightingOrigin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_SetTintRGBA = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_GetTintRGBA = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_SetAlphaFade = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_GetAlphaFade = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_SetMaterialOverride = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_ClearMaterialOverrideList = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_IsLoaded = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_IsRenderingEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_SetLoaded = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_ClearLoaded = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_DisableRendering = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_EnableRendering = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_SetRenderingEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_GetBoundingSphereRadius = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_ScheduleDirtyUpdate = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_UnscheduleDirtyUpdate = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_SetTransform = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_GetCTransform = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_SetBounds = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_GetParent = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_AddChildObject = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_RemoveChild = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_GetAttributesPtrForModify = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_EnableMeshGroups = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_DisableMeshGroups = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_ResetMeshGroups = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_GetCurrentMeshGroupMask = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_GetWorld = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_SetLOD = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_DisableLOD = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_GetCurrentLODGroupMask = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_GetCurrentLODLevel = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_GetModelHandle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_SetMaterialGroup = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CManagedSceneObject.__N.CMnged_SetBodyGroup = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				NavObstacle.__N.CNvObs_SBOX_Create = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				NavObstacle.__N.CNvObs_SBOX_Delete = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				NavObstacle.__N.CNvObs_SBOX_Update = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				NavObstacle.__N.CNvObs_SetObstacleActive = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_SetFloatValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_GetFloatValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_DeleteFloatValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_SetVector2DValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_GetVector2DValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_DeleteVector2DValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_SetVectorValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_GetVectorValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_DeleteVectorValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_SetVector4DValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_GetVector4DValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_DeleteVector4DValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_SetVMatrixValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_GetVMatrixValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_DeleteVMatrixValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_SetStringValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_DeleteStringValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_SetIntValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_GetIntValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_DeleteIntValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_SetConstantBufferValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_DeleteConstantBufferValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_SetComboValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_GetComboValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_DeleteComboValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_SetBoolValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_GetBoolValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_DeleteBoolValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_SetTextureValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_GetTextureValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_DeleteTextureValue = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_MergeToPtr = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_IsEmpty = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CRenderAttributes.__N.CRende_Clear = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.From_CSceneObject_To_CSceneAnimatableObject = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.To_CSceneObject_From_CSceneAnimatableObject = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_SetWorldSpaceRenderBoneTransform = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_GetWorldSpaceRenderBoneTransform = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_f2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_Update = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_SetGraphParameter = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_f3 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_f4 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_f5 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_f6 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_ChangeFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_SetFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_HasFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_GetFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_GetOriginalFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_ClearFlags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_SetCullDistance = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_SetLightingOrigin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_GetLightingOrigin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_HasLightingOrigin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_SetTintRGBA = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_GetTintRGBA = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_SetAlphaFade = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_GetAlphaFade = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_SetMaterialOverride = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_ClearMaterialOverrideList = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_IsLoaded = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_IsRenderingEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_SetLoaded = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_ClearLoaded = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_DisableRendering = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_EnableRendering = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_SetRenderingEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_GetBoundingSphereRadius = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_ScheduleDirtyUpdate = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_UnscheduleDirtyUpdate = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_SetTransform = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_GetCTransform = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_SetBounds = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_GetParent = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_AddChildObject = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_RemoveChild = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_GetAttributesPtrForModify = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_EnableMeshGroups = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_DisableMeshGroups = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_ResetMeshGroups = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_GetCurrentMeshGroupMask = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_GetWorld = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_SetLOD = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_DisableLOD = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_GetCurrentLODGroupMask = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_GetCurrentLODLevel = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_GetModelHandle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_SetMaterialGroup = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneAnimatableObject.__N.CScene_SetBodyGroup = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.From_CSceneObject_To_CSceneLightObject = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.To_CSceneObject_From_CSceneLightObject = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_UpdateLight = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_GetLightDescForModify = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_SetWorldPosition = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_GetWorldPosition = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_SetWorldDirection = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_GetWorldDirection = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_SetColor = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_GetColor = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_SetFalloff = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_GetFalloff = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_SetRadius = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_GetRadius = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_SetSpotCone = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_GetSpotInnerCone = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_GetSpotOuterCone = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f7 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f8 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f9 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f10 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f11 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f12 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f13 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f14 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f15 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f16 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f17 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f18 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f19 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f20 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f21 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f22 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f23 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f24 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f25 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f26 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f27 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f28 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f29 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f30 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f31 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f32 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f33 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f34 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f35 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f36 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f37 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f38 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f39 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f40 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f41 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f42 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f43 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f44 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f45 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f46 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f47 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f48 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f49 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f50 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneLightObject.__N.CScene_f51 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.From_CSceneObject_To_CSceneMonitorObject = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.To_CSceneObject_From_CSceneMonitorObject = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_GetMonitorAttributesPtrForModify = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f52 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f53 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f54 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f55 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f56 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f57 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f58 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f59 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f60 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f61 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f62 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f63 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f64 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f65 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f66 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f67 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f68 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f69 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f70 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f71 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f72 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f73 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f74 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f75 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f76 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f77 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f78 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f79 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f80 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f81 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f82 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f83 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f84 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f85 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f86 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f87 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f88 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f89 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f90 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f91 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f92 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f93 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f94 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f95 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneMonitorObject.__N.CScene_f96 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f97 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f98 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f99 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f100 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f101 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f102 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f103 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f104 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f105 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f106 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f107 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f108 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f109 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f110 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f111 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f112 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f113 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f114 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f115 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f116 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f117 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f118 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f119 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f120 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f121 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f122 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f123 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f124 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f125 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f126 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f127 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f128 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f129 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f130 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f131 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f132 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f133 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f134 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f135 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f136 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f137 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f138 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f139 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f140 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneObject.__N.CScene_f141 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.From_CSceneObject_To_CSceneParticleObject = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.To_CSceneObject_From_CSceneParticleObject = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_GetParticles = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f142 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f143 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f144 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f145 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f146 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f147 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f148 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f149 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f150 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f151 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f152 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f153 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f154 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f155 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f156 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f157 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f158 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f159 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f160 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f161 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f162 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f163 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f164 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f165 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f166 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f167 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f168 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f169 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f170 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f171 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f172 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f173 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f174 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f175 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f176 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f177 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f178 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f179 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f180 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f181 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f182 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f183 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f184 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f185 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneParticleObject.__N.CScene_f186 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.From_CSceneObject_To_CSceneSkyBoxObject = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.To_CSceneObject_From_CSceneSkyBoxObject = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_SetLighting_ConstantColorHemisphere = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_SetLighting_Samples = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_GetMaterial = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_SetMaterial = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_SetSkyTint = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_GetSkyTint = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_SetFogType = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_GetFogType = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_SetAngularFogParams = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_GetFogMinStart = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_GetFogMinEnd = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_GetFogMaxStart = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_GetFogMaxEnd = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f187 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f188 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f189 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f190 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f191 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f192 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f193 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f194 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f195 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f196 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f197 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f198 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f199 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f200 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f201 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f202 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f203 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f204 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f205 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f206 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f207 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f208 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f209 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f210 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f211 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f212 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f213 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f214 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f215 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f216 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f217 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f218 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f219 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f220 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f221 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f222 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f223 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f224 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f225 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f226 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f227 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f228 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f229 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f230 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSkyBoxObject.__N.CScene_f231 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.From_CGameSceneNode_To_CSkeletonInstance = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.To_CGameSceneNode_From_CSkeletonInstance = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_SetRenderingEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_IsRenderingEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_SetAnimationEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_IsAnimationEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_IsRigidSkeleton = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_HasPhysics = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_HasRendering = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_SetupPhysics = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_CleanupPhysics = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_CleanupCloth = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_LookupBone = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_GetNumBones = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_GetRootBoneMergeBone = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_GetAnimationStateParentSpaceTransform = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_GetAnimationStateWorldSpaceTransform = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_SBox_GetWorldspaceBones = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_SBox_GetBoneParent = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_SBox_GetBoneName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_SBox_SetBoneTransform = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_SBox_GetBoneTransform = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_Sbox_GetPhysicsBodyId = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_Sbox_GetPhysicsBody = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_Sbox_PhysicsBodyToBone = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_SBox_ComputeBonesAtTime = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_SBox_GetAttachment = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_SetHitboxSet = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_SetHitboxSetByName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_GetHitboxSet = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_GetHitboxSetName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_GetHitboxSetCount = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_GetBoneIndexForHitbox = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_GetHitboxGroup = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_SBox_SetBoneOverride = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_f2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_SBox_ClearBoneOverride = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSkeletonInstance.__N.CSkele_GetLocalOrigin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CUtlVectorSceneObjectResult.__N.CUtlVe_f2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CUtlVectorSceneObjectResult.__N.CUtlVe_f3 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CUtlVectorSceneObjectResult.__N.CUtlVe_f4 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CUtlVectorSceneObjectResult.__N.CUtlVe_f5 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CUtlVectorOverlapResult.__N.CUtlVe_Overlp_DeleteThis = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CUtlVectorOverlapResult.__N.CUtlVe_Overlp_Create = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CUtlVectorOverlapResult.__N.CUtlVe_Overlp_Count = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CUtlVectorOverlapResult.__N.CUtlVe_Overlp_Element = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				DataTable.__N.DtTble_GetTags = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				DataTable.__N.DtTble_RemoveTag = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				DataTable.__N.DtTble_AddTag = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				DataTable.__N.Get__DtTble_m_bPredictable = Marshal.GetDelegateForFunctionPointer<DataTable.__N._Get__DtTble_m_bPredictable>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				DataTable.__N.Set__DtTble_m_bPredictable = Marshal.GetDelegateForFunctionPointer<DataTable.__N._Set__DtTble_m_bPredictable>(exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				DebugOverlay.__N.debgve_Line = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				DebugOverlay.__N.debgve_Box = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				DebugOverlay.__N.debgve_BoxAngles = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				DebugOverlay.__N.debgve_SolidBoxAngles = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				DebugOverlay.__N.debgve_Sphere = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				DebugOverlay.__N.debgve_Capsule = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				DebugOverlay.__N.debgve_VectorText3D = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				DebugOverlay.__N.debgve_Text = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				DebugOverlay.__N.debgve_ScreenTextOffset = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				DebugOverlay.__N.debgve_Axis = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				DebugOverlay.__N.debgve_Cross = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				DebugOverlay.__N.debgve_Cross3D = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				DebugOverlay.__N.debgve_Triangle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				DebugOverlay.__N.debgve_Circle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				DebugOverlay.__N.debgve_f2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				ServerEngine.__N.engine_ChangeLevel = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				ServerEngine.__N.engine_IsDedicatedServer = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				ServerEngine.__N.engine_IsServerLocalOnly = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				ServerEngine.__N.engine_ServerCommand = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				ServerEngine.__N.engine_ClientCommand = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				ServerEngine.__N.engine_ClientPrintf = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				DecalGameSystem.__N.gpDecl_ClearDecalsForSkeletonInstance = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				DecalGameSystem.__N.gpDecl_ClearWorldDecals = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				DecalGameSystem.__N.gpDecl_ClearEntityDecals = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				DecalGameSystem.__N.gpDecl_MoveDecals = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				DecalGameSystem.__N.gpDecl_DecalShoot = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				EngineServiceMgr.__N.gpEngn_GetEngineDeviceWidth = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				EngineServiceMgr.__N.gpEngn_GetEngineDeviceHeight = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				EngineServiceMgr.__N.gpEngn_GetEngineSwapChainSize = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				EngineServiceMgr.__N.gpEngn_IsLoopSwitchQueued = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				EngineServiceMgr.__N.gpEngn_IsLoopSwitchRequested = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				EngineServiceMgr.__N.gpEngn_IsLoadingLevel = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				EngineServiceMgr.__N.gpEngn_IsInGameLoop = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				EntitySystem.__N.gpEntt_FindClassByName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				EntitySystem.__N.gpEntt_FindClassByDesignName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				EntitySystem.__N.gpEntt_FindFirstEntityByName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				EntitySystem.__N.gpEntt_CreateFromManaged = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				EntitySystem.__N.gpEntt_ExecuteQueuedCreation = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				LightQueryGameSystem.__N.gpLght_GetLightForPoint = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				MeshSystem.__N.gpMesh_CreateSceneObject = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				NetworkStringTableContainer.__N.gpNetw_CreateStringTable = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				NetworkStringTableContainer.__N.gpNetw_RemoveAllTables = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				NetworkStringTableContainer.__N.gpNetw_FindTable = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				NetworkStringTableContainer.__N.gpNetw_GetTable = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				NetworkStringTableContainer.__N.gpNetw_GetNumTables = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				NetworkStringTableContainer.__N.gpNetw_GetPrefix = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysicsGameSystem.__N.gpPhys_InitSubSteps = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PVSManager.__N.gpPVSM_AddOriginToPVS = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				ResourceSystem.__N.gpResr_ResourceHandleToResourceId = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSystem.__N.gpScen_DeleteSceneObject = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSystem.__N.gpScen_DeleteSceneObjectAtFrameEnd = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSystem.__N.gpScen_CreateLight = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSystem.__N.gpScen_CreateSkyBox = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSystem.__N.gpScen_BeginRenderingDynamicView = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSystem.__N.gpScen_GetWellKnownRenderTarget = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSystem.__N.gpScen_f2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSystem.__N.gpScen_GetWellKnownTexture = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSystem.__N.gpScen_GetWellKnownMaterialHandle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSystem.__N.gpScen_FinishRenderingViews = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSystem.__N.gpScen_WaitForRenderingToComplete = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSystem.__N.gpScen_IsWaitingOnRenderingJobs = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSystem.__N.gpScen_FrameUpdate = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSystem.__N.gpScen_GetFinishRenderingViewsCounter = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSystem.__N.gpScen_ThreadIsInRenderingJob = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSystem.__N.gpScen_GetCurrentRenderTime = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSystem.__N.gpScen_VolumetricFogEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSystem.__N.gpScen_NonTexturedGradientFogEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSystem.__N.gpScen_CubemapFogEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSystem.__N.gpScen_CharacterDecalRendererEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSystem.__N.gpScen_HDREnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				CSceneSystem.__N.gpScen_UseMultiviewInstancing = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_SendMessageToClient = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_SendMessageToAllClients = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_SendMessageToPVS = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_CreateFakeClient = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_CreateSceneWorld = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_DestroySceneWorld = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_GetCurrentSceneWorld = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_RecalculateLightDescDerivatives = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_CreateAnimSceneObject = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_CurrentSceneWorldChanged = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_HasLiquidMaterial = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_CreateConstantBuffer = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_DestroyConstantBuffer = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_UpdateConstantBuffer = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_DispatchComputeShader = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_GetCurrentPhysicsWorld = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_GetPhysicsBodyAggregateInstance = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_GetPhysicsBodyEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_GetWorldEntity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_PhysicsQueryEntitiesInSphere = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_PhysicsQueryEntitiesInBox = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_PhysicsWakeAllBodies = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_PhysicsAddBoxShape = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_PhysicsAddHullShape = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_PhysicsAddMeshShape = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_PhysicsUpdateMeshShape = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_SetSceneMonitorObjectFrustum = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_SetSceneMonitorObjectClearColor = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_SetSceneMonitorObjectRenderTargets = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_SetSceneMonitorObjectRenderShadows = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_SetAnimGraphPreview = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				GameGlue.__N.GmeGle_GetInputButtonBinding = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				ServerGlobal.__N.global_UTIL_Remove = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				ServerGlobal.__N.global_CreateEntityByName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				ConVar.__N.Glue_ConVar_AddConCommand = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				ConVar.__N.Glue_ConVar_AddConVar = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				ConVar.__N.Glue_ConVar_RemoveConvar = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				NavMesh.__N.Glue_NvMesh_IsLoaded = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				NavMesh.__N.Glue_NvMesh_GetPointOnMesh = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				NavMesh.__N.Glue_NvMesh_BuildPath = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				NavMesh.__N.Glue_NvMesh_BuildPathEx = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				NavMesh.__N.Glue_NvMesh_GetNavAreaAttributes = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				NavMesh.__N.Glue_NvMesh_GetPointWithinRadius = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_AddWeldJoint = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_AddRevoluteJoint = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_AddPrismaticJoint = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_AddConicalJoint = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_AddSpringJoint = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_AddSphericalJoint = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_AddGenericJoint = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_RemoveJoint = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Weld_GetJointFrame1 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Weld_GetLocalJointFrame1 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Weld_GetLocalJointFrame2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Weld_GetJointFrame2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Weld_SetLinearFrequency = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Weld_GetLinearFrequency = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Weld_SetLinearDampingRatio = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Weld_GetLinearDampingRatio = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Weld_SetMaxForce = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Weld_GetMaxForce = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Weld_SetAngularFrequency = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Weld_GetAngularFrequency = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Weld_SetAngularDampingRatio = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Weld_GetAngularDampingRatio = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Weld_SetMaxTorque = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Weld_GetMaxTorque = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Weld_Reset = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_GetAnchor1 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_GetLocalAnchor1 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_GetAnchor2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_GetLocalAnchor2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_GetLocalJointFrame1 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_GetJointFrame1 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_GetLocalJointFrame2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_GetJointFrame2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_SetMotorMode = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_GetMotorMode = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_SetMotorTargetAngle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_GetMotorTargetAngle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_SetMotorFrequency = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_GetMotorFrequency = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_SetMotorDampingRatio = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_GetMotorDampingRatio = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_SetMotorTargetVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_GetMotorTargetVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_SetMotorMaxTorque = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_GetMotorMaxTorque = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_SetMotorFriction = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_EnableLimit = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_DisableLimit = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_IsLimitEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_SetLimitRange = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_GetLimitRange = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_GetAngle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_GetAngleSpeed = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_GetAngleAxis = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Revolute_UseBlockSolver = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_GetLocalJointFrame1 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_GetJointFrame1 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_GetLocalJointFrame2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_GetJointFrame2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_GetMotorMode = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_GetMotorTargetOffset = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_GetMotorFrequency = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_GetMotorDampingRatio = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_GetMotorTargetVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_GetMotorMaxForce = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_IsLimitEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_GetLimitRange = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_GetOffset = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_GetOffsetSpeed = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_GetOffsetAxis = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_SetMotorMode = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_SetMotorTargetOffset = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_SetMotorFrequency = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_SetMotorDampingRatio = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_SetMotorTargetVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_SetMotorMaxForce = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_SetMotorFriction = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_EnableLimit = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_DisableLimit = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Prismatic_SetLimitRange = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_GetLocalJointFrame1 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_GetJointFrame1 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_GetLocalJointFrame2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_GetJointFrame2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_GetMotorMode = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_GetMotorTargetOrientation = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_GetMotorFrequency = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_GetMotorDampingRatio = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_GetMotorTargetVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_GetMotorMaxTorque = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_IsTwistLimitEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_GetTwistRange = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_GetTwistAngle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_GetTwistTorque = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_IsSwingLimitEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_GetSwingLimit = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_GetSwingAngle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_GetSwingTorque = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_SetMotorMode = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_SetMotorTargetOrientation = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_SetMotorFrequency = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_SetMotorDampingRatio = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_SetMotorTargetVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_SetMotorMaxTorque = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_SetMotorFriction = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_EnableTwistLimit = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_DisableTwistLimit = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_SetTwistRange = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_EnableSwingLimit = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_DisableSwingLimit = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Conical_SetSwingLimit = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spherical_GetLocalJointFrame1 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spherical_GetJointFrame1 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spherical_GetLocalJointFrame2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spherical_GetJointFrame2 = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spherical_GetMotorMode = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spherical_GetMotorTargetOrientation = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spherical_GetMotorFrequency = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spherical_GetMotorDampingRatio = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spherical_GetMotorTargetVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spherical_GetMotorMaxTorque = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spherical_SetMotorMode = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spherical_SetMotorTargetOrientation = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spherical_SetMotorFrequency = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spherical_SetMotorDampingRatio = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spherical_SetMotorTargetVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spherical_SetMotorMaxTorque = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spherical_SetMotorFriction = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spring_GetFrequency = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spring_GetDampingRatio = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spring_GetReferenceMass = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spring_GetRestLengthMin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spring_GetRestLengthMax = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spring_GetParameters = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spring_IsCollisionEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spring_SetFrequency = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spring_SetDampingRatio = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spring_SetReferenceMass = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spring_SetRestLength = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spring_SetParameters = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spring_EnableCollision = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Spring_DisableCollision = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Generic_GetLinearMotion = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Generic_GetLinearFrequency = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Generic_GetLinearDampingRatio = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Generic_GetLinearConstraintImpulse = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Generic_GetAngularMotion = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Generic_GetAngularFrequency = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Generic_GetAngularDampingRatio = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Generic_GetMaxLinearConstraintImpulse = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Generic_GetMaxAngularConstraintImpulse = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Generic_SetLinearMotion = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Generic_SetLinearFrequency = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Generic_SetLinearDampingRatio = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Generic_SetAngularMotion = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Generic_SetAngularFrequency = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Generic_SetAngularDampingRatio = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Generic_SetMaxLinearConstraintImpulse = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Generic_SetMaxAngularConstraintImpulse = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				PhysJoints.__N.Glue_Physcs_Generic_ScaleLambdas = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				AudioOutputStream.__N.IAdOtp_WriteAudioData = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				AudioOutputStream.__N.IAdOtp_SetVolume = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				AudioOutputStream.__N.IAdOtp_QueuedSampleCount = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				AudioOutputStream.__N.IAdOtp_MaxWriteSampleCount = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				AudioOutputStream.__N.IAdOtp_LatencySamplesCount = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				AudioOutputStream.__N.IAdOtp_Pause = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				AudioOutputStream.__N.IAdOtp_Resume = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IHandleEntity.__N.IHndle_GetRefEHandle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				INetworkStringTable.__N.INetwr_GetTableName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				INetworkStringTable.__N.INetwr_GetTableId = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				INetworkStringTable.__N.INetwr_GetNumStrings = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				INetworkStringTable.__N.INetwr_SetStringChangeTick = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				INetworkStringTable.__N.INetwr_GetStringChangeTick = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				INetworkStringTable.__N.INetwr_ChangedSinceTick = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				INetworkStringTable.__N.INetwr_AddString = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				INetworkStringTable.__N.INetwr_GetString = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				INetworkStringTable.__N.INetwr_SetStringUserData = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				INetworkStringTable.__N.INetwr_GetStringUserData = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				INetworkStringTable.__N.INetwr_FindStringIndex = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				INetworkStringTable.__N.INetwr_SetStringChangedCallback = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				INetworkStringTable.__N.INetwr_SetAllowClientSideAddString = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysAggregateInstance.__N.IPhysA_WakeUp = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysAggregateInstance.__N.IPhysA_PutToSleep = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysAggregateInstance.__N.IPhysA_SetVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysAggregateInstance.__N.IPhysA_AddVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysAggregateInstance.__N.IPhysA_SetAngularVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysAggregateInstance.__N.IPhysA_AddAngularVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysAggregateInstance.__N.IPhysA_GetBodyCount = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysAggregateInstance.__N.IPhysA_GetBodyHandle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysAggregateInstance.__N.IPhysA_GetBodyName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysAggregateInstance.__N.IPhysA_GetBodyNameHash = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysAggregateInstance.__N.IPhysA_GetBodyByNameHash = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysAggregateInstance.__N.IPhysA_GetBodyIndex = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysAggregateInstance.__N.IPhysA_FindBodyByName = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysAggregateInstance.__N.IPhysA_GetJointCount = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysAggregateInstance.__N.IPhysA_GetJointHandle = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysAggregateInstance.__N.IPhysA_GetOrigin = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysAggregateInstance.__N.IPhysA_GetMassCenter = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysAggregateInstance.__N.IPhysA_SetSurfaceProperties = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysAggregateInstance.__N.IPhysA_GetTotalMass = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysAggregateInstance.__N.IPhysA_SetTotalMass = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_GetSurfaceArea = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_SetGravityScale = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_GetGravityScale = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_IsGravityEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_EnableGravity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_SetMass = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_GetMass = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_GetPhysicalMassInv = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_GetMassCenter = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_GetLocalMassCenter = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_OverrideMassCenter = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_SetPosition = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_GetPosition = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_SetOrientation = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_GetOrientation = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_SetTransform = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_GetCTransform = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_GetScale = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_SetLinearVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_GetLinearVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_GetVelocityAtPoint = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_AddLinearVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_SetAngularVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_GetAngularVelocity = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_Wake = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_Sleep = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_IsSleeping = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_EnableAutoSleeping = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_DisableAutoSleeping = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_RemoveShadowController = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_EnableTouchEvents = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_DisableTouchEvents = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_IsTouchEventEnabled = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_GetType = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_SetType = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_GetShapeCount = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_GetShape = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_GetShapeIndex = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_AddSphereShape = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_AddCapsuleShape = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_AddCloneShape = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_RemoveShape = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_PurgeShapes = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_TransformVectorToLocal = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_TransformVectorToWorld = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_TransformPointToLocal = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_TransformPointToWorld = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_TransformOrientationToLocal = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_TransformOrientationToWorld = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_ApplyLinearImpulse = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_ApplyLinearImpulseAtWorldSpace = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				IPhysicsBody.__N.IPhysc_ApplyAngularImpulse = (void*)exported[(IntPtr)(i++) * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				int num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_ApplyForce = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_ApplyForceAt = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_ApplyTorque = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_ClearForces = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_ClearTorques = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_Enable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_Disable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_IsEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_IsCollisionEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_IsMotionEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_IsMoveable = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_EnableMotion = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_EnableCollisions = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_SetMinSolverIterations = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_BuildMass = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_SetLinearDamping = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_GetLinearDamping = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_SetAngularDamping = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_GetAngularDamping = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_EnableDrag = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_IsDragEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_SetLinearDrag = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_GetLinearDrag = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_SetAngularDrag = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_GetAngularDrag = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_RecomputeDragBases = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_BuildBounds = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_GetDensity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_FindClosestPointOnConvexShapes = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_SetSpeculativeContactEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_IsSpeculativeContactEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_UpdateSurfaceProperties = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsBody.__N.IPhysc_SetMaterialIndex = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_GetBody1 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_GetBody2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_GetAnchor1 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_GetLocalAnchor1 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_SetLocalAnchor1 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_GetAnchor2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_GetLocalAnchor2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_SetLocalAnchor2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_GetJointFrame1 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_GetLocalJointFrame1 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_SetLocalJointFrame1 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_GetJointFrame2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_GetLocalJointFrame2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_SetLocalJointFrame2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_EnableCollision = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_DisableCollision = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_EnableLinearConstraint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_DisableLinearConstraint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_IsLinearConstraintEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_GetLinearConstraintImpulse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_f3 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_SetMaxLinearConstraintImpulse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_GetMaxLinearConstraintImpulse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_EnableAngularConstraint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_DisableAngularConstraint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_IsAngularConstraintEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_GetAngularConstraintImpulse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_SetMaxAngularConstraintImpulse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_GetMaxAngularConstraintImpulse = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_Activate = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_Deactivate = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_IsActive = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsJoint.__N.IPhysc_f4 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsShape.__N.IPhysc_SetCollisionGroup = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsShape.__N.IPhysc_GetCollisionGroup = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsShape.__N.IPhysc_EnableInteractsAsLayer = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsShape.__N.IPhysc_DisableInteractsAsLayer = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsShape.__N.IPhysc_EnableInteractsWithLayer = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsShape.__N.IPhysc_DisableInteractsWithLayer = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsShape.__N.IPhysc_EnableInteractsExcludeLayer = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsShape.__N.IPhysc_DisableInteractsExcludeLayer = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsShape.__N.IPhysc_AddCollisionFunctionMask = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsShape.__N.IPhysc_RemoveCollisionFunctionMask = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsShape.__N.IPhysc_GetOwnerBody = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsShape.__N.IPhysc_f5 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsShape.__N.IPhysc_f6 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IPhysicsShape.__N.IPhysc_f7 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ISceneLayer.__N.IScene_SetObjectMatchID = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ISceneLayer.__N.IScene_GetDebugName = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ISceneLayer.__N.IScene_SetClearColor = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ISceneLayer.__N.IScene_GetTextureValue = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ISceneLayer.__N.IScene_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ISceneLayer.__N.IScene_GetRenderTargetDesc = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ISceneLayer.__N.Get__IScene_LayerEnum = Marshal.GetDelegateForFunctionPointer<ISceneLayer.__N._Get__IScene_LayerEnum>(exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				num = i;
				i = num + 1;
				ISceneLayer.__N.Set__IScene_LayerEnum = Marshal.GetDelegateForFunctionPointer<ISceneLayer.__N._Set__IScene_LayerEnum>(exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				num = i;
				i = num + 1;
				ISceneLayer.__N.Get__IScene_m_viewport = Marshal.GetDelegateForFunctionPointer<ISceneLayer.__N._Get__IScene_m_viewport>(exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				num = i;
				i = num + 1;
				ISceneLayer.__N.Set__IScene_m_viewport = Marshal.GetDelegateForFunctionPointer<ISceneLayer.__N._Set__IScene_m_viewport>(exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)]);
				num = i;
				i = num + 1;
				ISceneView.__N.IScene_GetMainViewport = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ISceneView.__N.IScene_GetSwapChain = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ISceneView.__N.IScene_AddDependentView = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ISceneView.__N.IScene_GetRenderAttributesPtr = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ISceneView.__N.IScene_AddRenderLayer = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ISceneView.__N.IScene_SetDefaultLayerObjectRequiredFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ISceneView.__N.IScene_SetDefaultLayerObjectExcludedFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ISceneView.__N.IScene_GetDefaultLayerObjectRequiredFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ISceneView.__N.IScene_GetDefaultLayerObjectExcludedFlags = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				ISceneWorld.__N.IScene_GetFirstVisibleSunLight = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IVPhysics2World.__N.IVPhys_GetBodyCount = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IVPhysics2World.__N.IVPhys_GetBody = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IVPhysics2World.__N.IVPhys_MoveToHead = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IVPhysics2World.__N.IVPhys_AddBody = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IVPhysics2World.__N.IVPhys_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IVPhysics2World.__N.IVPhys_RemoveBody = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IVPhysics2World.__N.IVPhys_GetWorldReferenceBody = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IVPhysics2World.__N.IVPhys_GetJointCount = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IVPhysics2World.__N.IVPhys_GetJoint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IVPhysics2World.__N.IVPhys_f3 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IVPhysics2World.__N.IVPhys_RemoveJoint = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IVPhysics2World.__N.IVPhys_SetGravity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IVPhysics2World.__N.IVPhys_GetGravity = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IVPhysics2World.__N.IVPhys_EnableSleeping = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IVPhysics2World.__N.IVPhys_DisableSleeping = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IVPhysics2World.__N.IVPhys_IsSleepingEnabled = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				IVPhysics2World.__N.IVPhys_RemoveContacts = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				PhysicsQuery.__N.Physcs_GetPointContents = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameParticleManager.__N.SBxPrt_CreateParticleIndex = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameParticleManager.__N.SBxPrt_SetParticleControl = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameParticleManager.__N.SBxPrt_SetParticleControlForward = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameParticleManager.__N.SBxPrt_SetParticleControlOrientation = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameParticleManager.__N.SBxPrt_SetParticleControlFallback = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameParticleManager.__N.SBxPrt_SetParticleControlEnt = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameParticleManager.__N.SBxPrt_SetParticleControlEntBone = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameParticleManager.__N.SBxPrt_SetParticleControlOffset = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameParticleManager.__N.SBxPrt_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameParticleManager.__N.SBxPrt_SetParticleControlModel = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameParticleManager.__N.SBxPrt_SetParticleTextureAttribute = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameParticleManager.__N.SBxPrt_SetParticleOverrideTexture = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameParticleManager.__N.SBxPrt_ReleaseParticleIndex = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameParticleManager.__N.SBxPrt_DestroyAllParticleEffectsInvolving = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameParticleManager.__N.SBxPrt_DestroyParticleEffect = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameParticleManager.__N.SBxPrt_SetFrozen = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameParticleManager.__N.SBxPrt_SetShouldDraw = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameParticleManager.__N.SBxPrt_SetParticleText = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameParticleManager.__N.SBxPrt_SetParticleAlwaysInstantiate = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameParticleManager.__N.SBxPrt_SetParticleAlwaysSimulate = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameParticleManager.__N.SBxPrt_SetParticleControlComponent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameParticleManager.__N.SBxPrt_SetParticleControlSnapshotAsset = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameParticleManager.__N.SBxPrt_SetParticleSimulationTimescale = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameSoundManager.__N.SBxSnd_StartSoundEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameSoundManager.__N.SBxSnd_f2 = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameSoundManager.__N.SBxSnd_StopSoundEvent = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameSoundManager.__N.SBxSnd_SetVolume = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameSoundManager.__N.SBxSnd_SetPitch = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameSoundManager.__N.SBxSnd_SetRandomPitch = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameSoundManager.__N.SBxSnd_SetPosition = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameSoundManager.__N.SBxSnd_GetElaspedTime = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameSoundManager.__N.SBxSnd_AudioStateHostTime = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameSoundManager.__N.SBxSnd_AudioStateFrameTime = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameSoundManager.__N.SBxSnd_AudioStatePlatformTime = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameSoundManager.__N.SBxSnd_CreateAttachedOutputStream = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				GameSoundManager.__N.SBxSnd_DestroyOutputStream = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				Trace.__N.Trace_Ray = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				Trace.__N.Trace_Capsule = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				Trace.__N.Trace_SweepPhysicsBody = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				Trace.__N.Trace_RayAll = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				Trace.__N.Trace_CapsuleAll = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				num = i;
				i = num + 1;
				Trace.__N.Trace_SweepPhysicsBodyAll = (void*)exported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)];
				i = 0;
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_OnNativeEntity);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalDestruct);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalUpdateOnRemove);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_EnterPVSInternal);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_LeavePVSInternal);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalClientCreated);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalClientActivate);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalEntityKeyValue);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalEntityConnection);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalSpawn);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalStartTouch);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalOnTouch);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalEndTouch);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalOnParentChanged);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalPreDataUpdate);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalPostDataUpdate);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalNetworkVariableChanged);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalOnNewModel);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalAnimEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalAnimEventFootstep);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalPostClientActive);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalOnSequenceFinished);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalOnNewSequence);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_PredictionStore);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_PredictionRestore);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_PredictionVerify);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_PredictionDestroy);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_PredictionShift);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalMoveDone);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalMoveBlocked);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalOnSetDormant);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalPhysicsCollisionEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_PlayerSetupVisibility);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalOnAnimGraphTag);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalOnAnimGraphCreated);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_ClentE_InternalOnNameChanged);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_CnsleS_DispatchCommand);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_OnNativeEntity);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalDestruct);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalUpdateOnRemove);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_EnterPVSInternal);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_LeavePVSInternal);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalClientCreated);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalClientActivate);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalEntityKeyValue);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalEntityConnection);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalSpawn);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalStartTouch);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalOnTouch);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalEndTouch);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalOnParentChanged);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalPreDataUpdate);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalPostDataUpdate);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalNetworkVariableChanged);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalOnNewModel);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalAnimEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalAnimEventFootstep);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalPostClientActive);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalOnSequenceFinished);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalOnNewSequence);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_PredictionStore);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_PredictionRestore);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_PredictionVerify);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_PredictionDestroy);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_PredictionShift);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalMoveDone);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalMoveBlocked);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalOnSetDormant);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalPhysicsCollisionEvent);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_PlayerSetupVisibility);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalOnAnimGraphTag);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalOnAnimGraphCreated);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Entity_InternalOnNameChanged);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_EnttyM_CreateServerEntity);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_EnttyM_CreateClientsideOfNetworkedEntity);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_Init);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_PreOnActivate);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_PostOnActivate);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_OnDeactivate);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_LoopShutdown);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_ClientPutInServer);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_ClientDisconnected);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_OnClientPreOutput);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_OnClientPostOutput);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_NotifyDisconnect);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_GetView);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_PreRender);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_UpdateAudioListener);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_PhysicsThink);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_PrePhysicsStep);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_PostPhysicsStep);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_PhysicsImpactSound);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_OnPhysicsJointBreak);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_RunBotCommands);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_ServerFrame_Think);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_ClientFrame_Think);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_PostEntitySpawn);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_Server_GetTimeScale);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_Server_GetTickRate);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_OnFrameSimulateStart);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_OnFrameSimulateEnd);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_GameLo_OnModelReloaded);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Netwrk_OnNetMessage);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_PlyerC_RunClient);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_PlyerC_RunClientFrame);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_PlyerC_RunServer);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_RelTme_Update);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandboserver_Physcs_OnObjectCreated);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandboserver_Physcs_OnObjectDestroyed);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandboserver_Physcs_f2);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandboserver_Physcs_f3);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandboserver_Physcs_f4);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandboserver_Physcs_f5);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandboserver_Physcs_f6);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandboserver_Physcs_f7);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandboserver_SceneO_OnObjectCreated);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandboserver_SceneO_OnObjectDestroyed);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandboserver_SceneW_OnObjectCreated);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandboserver_SceneW_OnObjectDestroyed);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_StrngT_Init);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_StrngT_Shutdown);
				num = i;
				i = num + 1;
				imported[(IntPtr)num * (IntPtr)sizeof(IntPtr) / (IntPtr)sizeof(IntPtr)] = (IntPtr)ldftn(Sandbo_Time_Update);
			}
			catch (Exception ___e)
			{
				onError(___e.Message + "\n\n" + ___e.StackTrace);
			}
		}

		// Token: 0x0200019A RID: 410
		// (Invoke) Token: 0x06001CDB RID: 7387
		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		internal delegate void _ErrorFunction(string message);
	}
}
